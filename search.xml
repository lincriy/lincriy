<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>某班签到</title>
      <link href="/2023/04/17/%E6%9F%90%E7%8F%AD%E7%AD%BE%E5%88%B0/"/>
      <url>/2023/04/17/%E6%9F%90%E7%8F%AD%E7%AD%BE%E5%88%B0/</url>
      
        <content type="html"><![CDATA[<p><span style="color: red;font-weight: bold;font-size: 26px;text-indent: 2em">某班更新了签到活动，提高了奖励额度：</span></p><ul><li><span style="color: blue;font-weight: bold;font-size: 16px;text-indent: 2em">每月满21天可以获得精美礼品一份</span></li><li><span style="color: blue;font-weight: bold;font-size: 16px;text-indent: 2em">每天签到成功可获得50网薪；</span></li><li><span style="color: blue;font-weight: bold;font-size: 16px;text-indent: 2em">每月连续签到21天可获得精美礼品1份；</span></li><li><span style="color: blue;font-weight: bold;font-size: 16px;text-indent: 2em">每月有1次补签机会，每次补签花费300网薪；</span></li></ul><img src="https://i.328888.xyz/2023/04/17/izCWF5.png" alt="image-20230417224520330" style="zoom:50%;" /><p><span style="color: red;font-weight: bold;font-size: 26px;text-indent: 2em">签到脚本如下：</span></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> random<span class="token keyword">import</span> base64user_name <span class="token operator">=</span> <span class="token string">"填入你的账号"</span>user_password <span class="token operator">=</span> <span class="token string">"填入你的密码"</span>headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span>    <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36'</span><span class="token punctuation">&#125;</span><span class="token comment"># 登录功能</span><span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span>usr_name<span class="token punctuation">,</span>usr_psw<span class="token punctuation">)</span><span class="token punctuation">:</span>    session <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>    login_parameter <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token string">'l'</span><span class="token punctuation">,</span>        <span class="token string">'_u'</span><span class="token punctuation">:</span> usr_name<span class="token punctuation">,</span>        <span class="token string">'_s'</span><span class="token punctuation">:</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>usr_psw<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'_c'</span><span class="token punctuation">:</span> <span class="token string">'0'</span><span class="token punctuation">,</span>        <span class="token string">'_p'</span><span class="token punctuation">:</span> <span class="token string">'true'</span>    <span class="token punctuation">&#125;</span>    response <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://zz.yiban.cn/zxkc/user?a=l'</span><span class="token punctuation">,</span>                           params<span class="token operator">=</span>login_parameter<span class="token punctuation">,</span>                           headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> session<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get_dict<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 可取得cookie</span><span class="token operator">//</span> 签到功能<span class="token keyword">def</span> <span class="token function">sign</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    rdm <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"http://zz.yiban.cn/ajax/ajax_sign.php?action=sign&amp;random="</span><span class="token operator">+</span>rdm<span class="token punctuation">,</span>                            headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">"__main__"</span><span class="token punctuation">:</span>    cookies <span class="token operator">=</span> login<span class="token punctuation">(</span>user_name<span class="token punctuation">,</span>user_password<span class="token punctuation">)</span>    sign<span class="token punctuation">(</span>cookies<span class="token punctuation">)</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> javascript 逆向 某班 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js常用hook</title>
      <link href="/2023/04/14/js%E5%B8%B8%E7%94%A8hook/"/>
      <url>/2023/04/14/js%E5%B8%B8%E7%94%A8hook/</url>
      
        <content type="html"><![CDATA[<h2 id="在程序尝试读写某个变量时断点"><a href="#在程序尝试读写某个变量时断点" class="headerlink" title="在程序尝试读写某个变量时断点"></a>在程序尝试读写某个变量时断点</h2><ul><li>假设需要捕获的是document对象中的cookie<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> tmp <span class="token operator">=</span> test<span class="token punctuation">;</span>    <span class="token comment">// 第一个参数：需要修改的对象</span>    <span class="token comment">// 第二个参数：对象内的属性名</span>    <span class="token comment">// 每个对象默认有get、set方法，可以在第三个参数里传入匿名函数重写</span>    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span><span class="token string">'cookie'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>        <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">param</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 尝试设置包含session_id的属性值时断点</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">"session_id"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">debugger</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> param<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 任何时候都断点</span>            <span class="token keyword">debugger</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> tmp<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="干掉定时debug函数"><a href="#干掉定时debug函数" class="headerlink" title="干掉定时debug函数"></a>干掉定时debug函数</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// _0x3f8251改为分析出的debug函数名</span><span class="token keyword">let</span> setInterval_bak <span class="token operator">=</span> setInterval<span class="token punctuation">;</span><span class="token function-variable function">setInterval</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a <span class="token operator">==</span> _0x3f8251<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">'debug函数死掉吧'</span>    <span class="token comment">// 非debug函数继续执行</span>    <span class="token function">setInterval_bak</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA文档图片处理</title>
      <link href="/2023/04/12/JAVA%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/"/>
      <url>/2023/04/12/JAVA%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="用到的MAVEN坐标"><a href="#用到的MAVEN坐标" class="headerlink" title="用到的MAVEN坐标"></a>用到的MAVEN坐标</h1><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/com.itextpdf/itextpdf --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.itextpdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>itextpdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.5.13.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.poi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>poi-ooxml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.2.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baidu.aip<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>java-sdk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.16.14<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="读EXCEL"><a href="#读EXCEL" class="headerlink" title="读EXCEL"></a>读EXCEL</h1><ul><li>提取EXCEL中某列数据</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">excelReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 结果集</span>    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> names <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// try-resource，读项目路径文件</span>    <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token keyword">new</span>  <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">"src/main/resources/UserNames.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 根据文件新建文档对象</span>        <span class="token class-name">XSSFWorkbook</span> workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 取文档中的第一个工作表</span>        <span class="token class-name">XSSFSheet</span> sheet0 <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">getSheetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 遍历行，把每行的第5个的内容放到结果集中</span>        sheet0<span class="token punctuation">.</span><span class="token function">rowIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEachRemaining</span><span class="token punctuation">(</span>row <span class="token operator">-></span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Cell</span> cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            names<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span><span class="token function">getStringCellValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 返回结果集</span>    <span class="token keyword">return</span> names<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="读PDF"><a href="#读PDF" class="headerlink" title="读PDF"></a>读PDF</h1><ul><li>提取PDF中所有字符内容</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">pdfReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">PdfReader</span> pdfReader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token comment">// 结果集</span>    <span class="token class-name">StringBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 根据输入流，构造PdfReader实例</span>        pdfReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PdfReader</span><span class="token punctuation">(</span><span class="token string">"src/main/resources/1.pdf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// getNumberOfPages方法获取总页数</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> pdfReader<span class="token punctuation">.</span><span class="token function">getNumberOfPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 获取每一页的内容</span>            <span class="token class-name">String</span> text <span class="token operator">=</span> <span class="token class-name">PdfTextExtractor</span><span class="token punctuation">.</span><span class="token function">getTextFromPage</span><span class="token punctuation">(</span>pdfReader<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 添加到结果集中</span>            builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"\n--------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>pdfReader <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            pdfReader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> builder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="水平切割图片"><a href="#水平切割图片" class="headerlink" title="水平切割图片"></a>水平切割图片</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 横向图片切割：把一个纵向的长图水平切割成多个小图，每张小图保存在src/main/resources/目录下 * @param heightForEachImage 小图片的高度*/</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name">HorizontalImageCut</span><span class="token punctuation">(</span><span class="token class-name">String</span> sourceFile<span class="token punctuation">,</span><span class="token keyword">int</span> heightForEachImage<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">File</span> inputFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>sourceFile<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> sourceFileFolder <span class="token operator">=</span> inputFile<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> fileSuffix <span class="token operator">=</span> inputFile<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>inputFile<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token char">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> sourceFileFolder<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">FileInputStream</span> inputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>sourceFile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 读原图</span>        <span class="token class-name">BufferedImage</span> image <span class="token operator">=</span> <span class="token class-name">ImageIO</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> width <span class="token operator">=</span> image<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> height <span class="token operator">=</span> heightForEachImage<span class="token punctuation">;</span>        <span class="token comment">// 计算实际需要切割的小图数量</span>        <span class="token keyword">int</span> imageCount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span> image<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 结果图片集合</span>        <span class="token class-name">BufferedImage</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bufferedImages <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">[</span>imageCount<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">// 绘制每一张结果图</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> imageCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 把每一张结果图的宽度设定为原图宽度，高度设定为要求的小图高度（若是最后一张图则取剩余高度）</span>            bufferedImages<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span>i <span class="token operator">==</span> imageCount <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> image<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>i<span class="token operator">*</span>height<span class="token operator">:</span> height<span class="token punctuation">,</span>image<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 新建2D画布</span>            <span class="token class-name">Graphics2D</span> graphics <span class="token operator">=</span> bufferedImages<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">createGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 从image中截出小图，放到bufferedImages[i]中</span>            graphics<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>i<span class="token operator">*</span>height<span class="token punctuation">,</span>width<span class="token punctuation">,</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>height<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 写出图片到指定文件夹</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bufferedImages<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ImageIO</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bufferedImages<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"jpg"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>sourceFileFolder <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> i <span class="token operator">+</span> fileSuffix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="百度OCR识别文字"><a href="#百度OCR识别文字" class="headerlink" title="百度OCR识别文字"></a>百度OCR识别文字</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** * 调用百度OCR接口识别图片文字内容(每个月免费1000次)：结果打印在控制台并写入到源目录下的result.json文件中方便后续使用 * @param sourceFileFolder 存放源图片的目录 * @param MaxImageIndex 总图片个数，若&#123;@code suffix&#125;指定的值是.jpg，函数会遍历0.jpg、1.jpg、...、&#123;@code MaxImageIndex&#125;.jpg * @param suffix 图片的后缀，读取的图片会以该格式为后缀*/</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name">OCRImageReader</span><span class="token punctuation">(</span><span class="token class-name">String</span> sourceFileFolder<span class="token punctuation">,</span><span class="token class-name">Integer</span> <span class="token class-name">MaxImageIndex</span><span class="token punctuation">,</span><span class="token class-name">String</span> suffix<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 初始化一个AipOcr，填入自己账号中的三个参数</span>    <span class="token class-name">String</span> <span class="token constant">APP_ID</span> <span class="token operator">=</span> <span class="token string">"APP_ID"</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> <span class="token constant">API_KEY</span> <span class="token operator">=</span> <span class="token string">"API_KEY"</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> <span class="token constant">SECRET_KEY</span> <span class="token operator">=</span> <span class="token string">"SECRET_KEY"</span><span class="token punctuation">;</span>    <span class="token class-name">AipOcr</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AipOcr</span><span class="token punctuation">(</span><span class="token constant">APP_ID</span><span class="token punctuation">,</span> <span class="token constant">API_KEY</span><span class="token punctuation">,</span> <span class="token constant">SECRET_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 可选：设置网络连接参数</span>    client<span class="token punctuation">.</span><span class="token function">setConnectionTimeoutInMillis</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    client<span class="token punctuation">.</span><span class="token function">setSocketTimeoutInMillis</span><span class="token punctuation">(</span><span class="token number">60000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 创建结果集</span>    <span class="token class-name">JSONArray</span> jsonArray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 对每一张图片调用一次接口</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">MaxImageIndex</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 拼接出图片路径</span>        <span class="token class-name">String</span> path <span class="token operator">=</span> sourceFileFolder <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> <span class="token operator">+</span> i <span class="token operator">+</span> suffix<span class="token punctuation">;</span>        <span class="token comment">// 断言是一个文件</span>        <span class="token keyword">assert</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 调用接口识别文字，返回JSON对象</span>        <span class="token class-name">JSONObject</span> res <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">basicGeneral</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 把识别结果添加到结果集中</span>        jsonArray<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">FileWriter</span> writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileWriter</span><span class="token punctuation">(</span>sourceFileFolder<span class="token operator">+</span><span class="token string">"/"</span><span class="token operator">+</span><span class="token string">"result.json"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 该处的toString的参数indentFactor是缩进因子，这样打印出来会更美观</span>        writer<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>jsonArray<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 再往控制台输出一份</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jsonArray<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JAVA OCR EXCEL PDF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某WebSocket接口调用示例</title>
      <link href="/2023/04/10/%E6%9F%90%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8%E7%A4%BA%E4%BE%8B/"/>
      <url>/2023/04/10/%E6%9F%90%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<div class="hide-block"><button type="button" class="hide-button" style="background-color: red;color: white">点我运行HTML代码    </button><div class="hide-content"><!DOCTYPE html><html lang="en"><head>    <meta charset="UTF-8">    <meta http-equiv="X-UA-Compatible" content="IE=edge">    <meta name="viewport" content="width=device-width, initial-scale=1.0">    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.0.3/socket.io.js"></script>    <script src="https://cdn.staticfile.org/hls.js/1.1.4-0.canary.8229/hls.min.js"></script>    <title>Video test</title></head><style>    .button{        width: 200px;        height: 50px;        border: 2px solid red;        border-radius: 10px;        margin-left: 10px;        background-image: linear-gradient(to top, #ff9a9e 0%, #fecfef 99%, #fecfef 100%);    }    .button:hover{        background-image: linear-gradient(120deg, #d4fc79 0%, #96e6a1 100%);    }    .middle{        text-align: center;    }</style><body>    <video style="top: 0px;right: 0px;bottom: 0px;left: 0px;margin: auto;max-height: 220px;width: 100%;background-color:black;" id="video" controls autoplay></video>    <div class="middle">        <button id="play" class='button'>播放/切换视频</button>        <button id="close" class='button'>关闭服务器连接</button>    </div></body><script>    function getKey(_0x7c96b5) {        var _0x214365 = {            'haZdN': '2|3|5|1|4|0',            'JnFvK': function (_0x194fc6, _0x1edbae) {                return _0x194fc6 || _0x1edbae;            },            'oVUOC': 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678',            'GZFDR': function (_0x383254, _0x483e8b) {                return _0x383254 < _0x483e8b;            },            'JxtVB': function (_0x6fa0ea, _0x325b97) {                return _0x6fa0ea * _0x325b97;            }        };        var _0x4290eb = _0x214365['haZdN']['split']('|'), _0x4858f9 = 0;        while (!![]) {            switch (_0x4290eb[_0x4858f9++]) {                case '0':                    return _0x52150a;                case '1':                    var _0x52150a = '';                    continue;                case '2':                    _0x7c96b5 = _0x214365['JnFvK'](_0x7c96b5, 32);                    continue;                case '3':                    var _0x696669 = _0x214365['oVUOC'];                    continue;                case '4':                    for (i = 0; _0x214365['GZFDR'](i, _0x7c96b5); i++) {                        _0x52150a += _0x696669['charAt'](Math['floor'](_0x214365['JxtVB'](Math['random'](), _0x64655d)));                    }                    continue;                case '5':                    var _0x64655d = _0x696669['length'];                    continue;            }            break;        }    }    playBtn = document.getElementById("play")    closeBtn = document.getElementById("close")    video = document.getElementById('video')    function playVideo(url) {        if (Hls.isSupported()) {            var hls = new Hls();            hls.loadSource(url);            hls.attachMedia(video);        }    }    playBtn.onclick = function () {        socket = io("http://210.87.207.212:8003")        socket.emit('success', {            's': getKey(8)        });        socket.on('getMove', function (response) {        console.log(response)        playVideo(response)    });    }    closeBtn.onclick = function () {        socket.close()    }</script></html></div></div><h1 id="免责声明：-本文章仅用于技术研究，禁止用于非法用途，否则后果自负"><a href="#免责声明：-本文章仅用于技术研究，禁止用于非法用途，否则后果自负" class="headerlink" title="免责声明： 本文章仅用于技术研究，禁止用于非法用途，否则后果自负"></a>免责声明： 本文章仅用于技术研究，禁止用于非法用途，否则后果自负</h1><h1 id="完整HTML代码-复制可用"><a href="#完整HTML代码-复制可用" class="headerlink" title="完整HTML代码(复制可用)"></a>完整HTML代码(复制可用)</h1><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.0.3/socket.io.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.staticfile.org/hls.js/1.1.4-0.canary.8229/hls.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Video test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">button</span><span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 2px solid red<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token property">margin-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to top<span class="token punctuation">,</span> #ff9a9e 0%<span class="token punctuation">,</span> #fecfef 99%<span class="token punctuation">,</span> #fecfef 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">button:hover</span><span class="token punctuation">&#123;</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>120deg<span class="token punctuation">,</span> #d4fc79 0%<span class="token punctuation">,</span> #96e6a1 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.middle</span><span class="token punctuation">&#123;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token property">right</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token property">bottom</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token property">max-height</span><span class="token punctuation">:</span> 220px<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span>black<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>video<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span> <span class="token attr-name">autoplay</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>play<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>播放/切换视频<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>关闭服务器连接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">function</span> <span class="token function">getKey</span><span class="token punctuation">(</span><span class="token parameter">_0x7c96b5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> _0x214365 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string-property property">'haZdN'</span><span class="token operator">:</span> <span class="token string">'2|3|5|1|4|0'</span><span class="token punctuation">,</span>            <span class="token string-property property">'JnFvK'</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">_0x194fc6<span class="token punctuation">,</span> _0x1edbae</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> _0x194fc6 <span class="token operator">||</span> _0x1edbae<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token string-property property">'oVUOC'</span><span class="token operator">:</span> <span class="token string">'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678'</span><span class="token punctuation">,</span>            <span class="token string-property property">'GZFDR'</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">_0x383254<span class="token punctuation">,</span> _0x483e8b</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> _0x383254 <span class="token operator">&lt;</span> _0x483e8b<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token string-property property">'JxtVB'</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">_0x6fa0ea<span class="token punctuation">,</span> _0x325b97</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> _0x6fa0ea <span class="token operator">*</span> _0x325b97<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> _0x4290eb <span class="token operator">=</span> _0x214365<span class="token punctuation">[</span><span class="token string">'haZdN'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'split'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _0x4858f9 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">switch</span> <span class="token punctuation">(</span>_0x4290eb<span class="token punctuation">[</span>_0x4858f9<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">case</span> <span class="token string">'0'</span><span class="token operator">:</span>                    <span class="token keyword">return</span> _0x52150a<span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">'1'</span><span class="token operator">:</span>                    <span class="token keyword">var</span> _0x52150a <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>                    <span class="token keyword">continue</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">'2'</span><span class="token operator">:</span>                    _0x7c96b5 <span class="token operator">=</span> _0x214365<span class="token punctuation">[</span><span class="token string">'JnFvK'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>_0x7c96b5<span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">continue</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">'3'</span><span class="token operator">:</span>                    <span class="token keyword">var</span> _0x696669 <span class="token operator">=</span> _0x214365<span class="token punctuation">[</span><span class="token string">'oVUOC'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">continue</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">'4'</span><span class="token operator">:</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> _0x214365<span class="token punctuation">[</span><span class="token string">'GZFDR'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> _0x7c96b5<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        _0x52150a <span class="token operator">+=</span> _0x696669<span class="token punctuation">[</span><span class="token string">'charAt'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>Math<span class="token punctuation">[</span><span class="token string">'floor'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>_0x214365<span class="token punctuation">[</span><span class="token string">'JxtVB'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>Math<span class="token punctuation">[</span><span class="token string">'random'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _0x64655d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">continue</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">'5'</span><span class="token operator">:</span>                    <span class="token keyword">var</span> _0x64655d <span class="token operator">=</span> _0x696669<span class="token punctuation">[</span><span class="token string">'length'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    playBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"play"</span><span class="token punctuation">)</span>    closeBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"close"</span><span class="token punctuation">)</span>    video <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'video'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">playVideo</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Hls<span class="token punctuation">.</span><span class="token function">isSupported</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> hls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            hls<span class="token punctuation">.</span><span class="token function">loadSource</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>            hls<span class="token punctuation">.</span><span class="token function">attachMedia</span><span class="token punctuation">(</span>video<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    playBtn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        socket <span class="token operator">=</span> <span class="token function">io</span><span class="token punctuation">(</span><span class="token string">"http://210.87.207.212:8003"</span><span class="token punctuation">)</span>        socket<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'success'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            <span class="token string-property property">'s'</span><span class="token operator">:</span> <span class="token function">getKey</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'getMove'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>        <span class="token function">playVideo</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    closeBtn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 逆向 javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极域电子教室</title>
      <link href="/2023/04/03/%E6%9E%81%E5%9F%9F/"/>
      <url>/2023/04/03/%E6%9E%81%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="1-学生端万能通用密码"><a href="#1-学生端万能通用密码" class="headerlink" title="1. 学生端万能通用密码"></a>1. 学生端万能通用密码</h1><pre class="line-numbers language-text" data-language="text"><code class="language-text">mythware_super_password<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="作用："><a href="#作用：" class="headerlink" title="作用："></a>作用：</h3><ul><li>删除学生端极域程序</li><li>在禁网之前切换频道，防止“页面已被阻止“</li></ul><h1 id="2-再见极域"><a href="#2-再见极域" class="headerlink" title="2. 再见极域"></a>2. 再见极域</h1><p><a href="https://www.lanzouj.com/i1y0zje">[下载再见极域]</a></p><h3 id="作用：-1"><a href="#作用：-1" class="headerlink" title="作用："></a>作用：</h3><ul><li>解除全屏广播</li><li>解除键盘锁</li><li>杀死极域进程</li></ul><p><img src="https://i.328888.xyz/2023/04/03/iO8Wb5.jpeg" alt="再见极域截图"></p><h1 id="3-手动杀死极域"><a href="#3-手动杀死极域" class="headerlink" title="3. 手动杀死极域"></a>3. 手动杀死极域</h1><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">taskkill &#x2F;F &#x2F;T &#x2F;PID StudentMain.exe的pid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="命令解释："><a href="#命令解释：" class="headerlink" title="命令解释："></a>命令解释：</h3><ol><li>&#x2F;F 强制终止进程</li><li>&#x2F;T 终止进程树</li><li>&#x2F;PID 后跟需要终止的进程pid</li></ol><p><img src="https://i.328888.xyz/2023/04/03/iO2uWd.jpeg" alt="任务管理器pid示例"></p><h1 id="4-http代理绕过禁网"><a href="#4-http代理绕过禁网" class="headerlink" title="4. http代理绕过禁网"></a>4. http代理绕过禁网</h1><h3 id="实现步骤："><a href="#实现步骤：" class="headerlink" title="实现步骤："></a>实现步骤：</h3><ol><li>在局域网内搞一个不会被禁网的肉鸡电脑，肉鸡制作步骤如下：<ol><li>下载https代理工具例如：<a href="http://update.youngzsoft.com/ccproxy/update/ccproxysetup.exe">[下载ccproxy]</a></li><li>打开代理功能，记住肉鸡ip和端口号</li></ol></li><li>在需要使用网络的电脑上，设置代理：<img src="https://i.328888.xyz/2023/04/03/iOjLXN.jpeg" alt="代理设置示例"></li><li>完成</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 极域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mapreduce案例源码解析(WordCount)</title>
      <link href="/2023/04/03/Mapreduce%E6%A1%88%E4%BE%8B%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90(WordCount)/"/>
      <url>/2023/04/03/Mapreduce%E6%A1%88%E4%BE%8B%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90(WordCount)/</url>
      
        <content type="html"><![CDATA[<h1 id="Mapreduce源码-WordCount"><a href="#Mapreduce源码-WordCount" class="headerlink" title="Mapreduce源码(WordCount)"></a>Mapreduce源码(WordCount)</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>fs<span class="token punctuation">.</span></span><span class="token class-name">Path</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>conf<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>mapred<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WordCount</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Map</span> <span class="token keyword">extends</span> <span class="token class-name">MapReduceBase</span> <span class="token keyword">implements</span> <span class="token class-name">Mapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LongWritable</span><span class="token punctuation">,</span><span class="token class-name">Text</span><span class="token punctuation">,</span><span class="token class-name">Text</span><span class="token punctuation">,</span><span class="token class-name">IntWritable</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">IntWritable</span> one <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntWritable</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token class-name">Text</span> word <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">LongWritable</span> key<span class="token punctuation">,</span><span class="token class-name">Text</span> value<span class="token punctuation">,</span><span class="token class-name">OutputCollector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span><span class="token punctuation">,</span><span class="token class-name">IntWritable</span><span class="token punctuation">></span></span> output<span class="token punctuation">,</span><span class="token class-name">Reporter</span> reporter<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> line <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">StringTokenizer</span> tokenizer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringTokenizer</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span><span class="token punctuation">(</span>tokenizer<span class="token punctuation">.</span><span class="token function">hasMoreTokens</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                word<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>tokenizer<span class="token punctuation">.</span><span class="token function">nextToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                output<span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>word<span class="token punctuation">,</span>one<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Reduce</span> <span class="token keyword">extends</span> <span class="token class-name">MapReduceBase</span> <span class="token keyword">implements</span> <span class="token class-name">Reducer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span><span class="token punctuation">,</span><span class="token class-name">IntWritable</span><span class="token punctuation">,</span><span class="token class-name">Text</span><span class="token punctuation">,</span><span class="token class-name">IntWritable</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reduce</span><span class="token punctuation">(</span><span class="token class-name">Text</span> key<span class="token punctuation">,</span><span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IntWritable</span><span class="token punctuation">></span></span> values<span class="token punctuation">,</span><span class="token class-name">OutputCollector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span><span class="token punctuation">,</span><span class="token class-name">IntWritable</span><span class="token punctuation">></span></span> output<span class="token punctuation">,</span><span class="token class-name">Reporter</span> reporter<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">while</span><span class="token punctuation">(</span>values<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                sum <span class="token operator">+=</span> values<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            output<span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">IntWritable</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">&#123;</span>        <span class="token class-name">JobConf</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JobConf</span><span class="token punctuation">(</span><span class="token class-name">WordCount</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                conf<span class="token punctuation">.</span><span class="token function">setJobName</span><span class="token punctuation">(</span><span class="token string">"wordcount"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        conf<span class="token punctuation">.</span><span class="token function">setOutputKeyClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        conf<span class="token punctuation">.</span><span class="token function">setOutputValueClass</span><span class="token punctuation">(</span><span class="token class-name">IntWritable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        conf<span class="token punctuation">.</span><span class="token function">setMapperClass</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        conf<span class="token punctuation">.</span><span class="token function">setCombinerClass</span><span class="token punctuation">(</span><span class="token class-name">Reduce</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        conf<span class="token punctuation">.</span><span class="token function">setReducerClass</span><span class="token punctuation">(</span><span class="token class-name">Reduce</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        conf<span class="token punctuation">.</span><span class="token function">setInputFormat</span><span class="token punctuation">(</span><span class="token class-name">TextInputFormat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        conf<span class="token punctuation">.</span><span class="token function">setOutputFormat</span><span class="token punctuation">(</span><span class="token class-name">TextOutputFormat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">FileInputFormat</span><span class="token punctuation">.</span><span class="token function">setInputPaths</span><span class="token punctuation">(</span>conf<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileOutputFormat</span><span class="token punctuation">.</span><span class="token function">setOutputPath</span><span class="token punctuation">(</span>conf<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">JobClient</span><span class="token punctuation">.</span><span class="token function">runJob</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码运行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hadoop jar Mapreduce-1.0-SNAPSHOT.jar WordCount /input/text /ouput<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> linux Mapreduce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第六模块 Hive数据分析</title>
      <link href="/2023/04/01/%E7%AC%AC%E5%85%AD%E6%A8%A1%E5%9D%97%20Hive%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
      <url>/2023/04/01/%E7%AC%AC%E5%85%AD%E6%A8%A1%E5%9D%97%20Hive%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="Hive数据分析"><a href="#Hive数据分析" class="headerlink" title="Hive数据分析"></a>Hive数据分析</h2><p>数据集含义：</p><p>user_id:购物者唯一id</p><p>age_range:用户的年龄范围：1代表 &lt;18  2代表[18,24]  3表示[25-29] 4表示[30-34] 5表示[35,39] 6表示[40,49] 7表示[50,59] 8表示[&gt;&#x3D;60]</p><p>gender:0 女 1 男 2 为空和不详</p><p>merchant_id:商家的唯一id</p><p>label:1 表示 user_id 是 merchant_id的重复购买者,0表示非重复买家。其他不详</p><p>activity_log:字段之间用‘:’分割，item_id,category_id 商品所属类别唯一id,brand_id 品牌的唯一id,time_stamp 购物发生的时间(mmdd),action_type 0点击 1加入购物车 2购买 3收藏</p><p>一.在hive数据库下构建数据表shopping</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> shopping <span class="token punctuation">(</span>user_id <span class="token keyword">int</span><span class="token punctuation">,</span>age_range <span class="token keyword">int</span><span class="token punctuation">,</span>gender <span class="token keyword">int</span><span class="token punctuation">,</span>merchant_id <span class="token keyword">int</span><span class="token punctuation">,</span>label <span class="token keyword">int</span><span class="token punctuation">,</span>activity_log <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">','</span> TBLPROPERTIES <span class="token punctuation">(</span><span class="token string">'skip.header.line.count'</span><span class="token operator">=</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>二.将原始数据导入shopping表中，注意过滤第一行数据</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token keyword">local</span> inpath <span class="token string">'shopping.csv'</span> <span class="token keyword">into</span> <span class="token keyword">table</span> shopping<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>三.在hive数据库下创建result中间表，注意数据切分</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#将activity_log切分</span><span class="token keyword">create</span> <span class="token keyword">table</span> result <span class="token keyword">as</span> <span class="token keyword">select</span> user_id<span class="token punctuation">,</span>   split<span class="token punctuation">(</span>new_table<span class="token punctuation">.</span>activity_log<span class="token punctuation">,</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">as</span> item_id<span class="token punctuation">,</span>   split<span class="token punctuation">(</span>new_table<span class="token punctuation">.</span>activity_log<span class="token punctuation">,</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token keyword">as</span> brand_id<span class="token punctuation">,</span>   split<span class="token punctuation">(</span>new_table<span class="token punctuation">.</span>activity_log<span class="token punctuation">,</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token keyword">as</span> action_type<span class="token keyword">from</span> shopping lateral <span class="token keyword">view</span> explode<span class="token punctuation">(</span>split<span class="token punctuation">(</span>activity_log<span class="token punctuation">,</span><span class="token string">'#'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> new_table <span class="token keyword">as</span> activity_log<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>四.在hive数据库下创建click表，统计数据中点击次数top1的商品信息，结果写入&#x2F;root&#x2F;click_top_10&#x2F;000000_00</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> click <span class="token keyword">as</span> <span class="token keyword">select</span> brand_id<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> results <span class="token keyword">from</span> result <span class="token keyword">where</span> action_type<span class="token operator">=</span><span class="token number">0</span> <span class="token keyword">group</span> <span class="token keyword">by</span> brand_id <span class="token keyword">order</span> <span class="token keyword">by</span> results <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">insert</span> overwrite <span class="token keyword">local</span> directory <span class="token string">'/root/click_top_10'</span> <span class="token keyword">row</span> format delimited <span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">BY</span> <span class="token string">','</span> stored <span class="token keyword">as</span> textfile<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> click<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>五.统计数据中购买次数top10的商品信息，写入&#x2F;root&#x2F;emp_top_10&#x2F;000000_00</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> buy <span class="token keyword">as</span> <span class="token keyword">select</span> brand_id<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> results <span class="token keyword">from</span> result <span class="token keyword">where</span> action_type<span class="token operator">=</span><span class="token number">2</span> <span class="token keyword">group</span> <span class="token keyword">by</span> brand_id <span class="token keyword">order</span> <span class="token keyword">by</span> results <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">insert</span> overwrite <span class="token keyword">local</span> directory <span class="token string">'/root/emp_top_10/'</span>  <span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">BY</span> <span class="token string">','</span> stored <span class="token keyword">as</span> textfile<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> buy<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>六.统计收藏次数top10，写入&#x2F;root&#x2F;collect_top_10&#x2F;000000_00</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> collect <span class="token keyword">as</span> <span class="token keyword">select</span> brand_id<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> results <span class="token keyword">from</span> result <span class="token keyword">where</span> action_type<span class="token operator">=</span><span class="token number">3</span> <span class="token keyword">group</span> <span class="token keyword">by</span> brand_id <span class="token keyword">order</span> <span class="token keyword">by</span> results <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">insert</span> overwrite <span class="token keyword">local</span> directory <span class="token string">'/root/collect_top_10/'</span>  <span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">BY</span> <span class="token string">','</span> stored <span class="token keyword">as</span> textfile<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> collect<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>七.根据用户浏览点击最多的品牌，计算该品牌的收藏购买转化率，写入&#x2F;root&#x2F;collect_emption&#x2F;000000_00</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> coll_buy <span class="token keyword">as</span><span class="token keyword">select</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>action_type<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>action_type<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">from</span> result <span class="token keyword">where</span> brand_id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> brand_id <span class="token keyword">from</span> result <span class="token keyword">where</span> activity_type<span class="token operator">=</span><span class="token number">0</span> <span class="token keyword">group</span> <span class="token keyword">by</span> brand_id <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> overwrite <span class="token keyword">local</span> directory <span class="token string">'/root/collect_emption/'</span> <span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">BY</span> <span class="token string">','</span> stored <span class="token keyword">as</span> textfile<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> coll_buy<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>八.查找最活跃的用户，求出该用户对应的点击购买转化率最高的品牌信息，写入&#x2F;root&#x2F;click_emption</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> click_buy <span class="token keyword">as</span><span class="token keyword">select</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>action_type<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span>action_type<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">from</span> result <span class="token keyword">where</span> user_id<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> user_id <span class="token keyword">from</span> result <span class="token keyword">where</span> action_type<span class="token operator">=</span><span class="token number">0</span> <span class="token keyword">group</span> <span class="token keyword">by</span> user_id <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token keyword">insert</span> overwrite <span class="token keyword">local</span> directory <span class="token string">'/root/click_emption/'</span> <span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">BY</span> <span class="token string">','</span> stored <span class="token keyword">as</span> textfile<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> click_buy<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> linux hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第五模块 SPARK搭建</title>
      <link href="/2023/04/01/%E7%AC%AC%E4%BA%94%E6%A8%A1%E5%9D%97%20SPARK%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/04/01/%E7%AC%AC%E4%BA%94%E6%A8%A1%E5%9D%97%20SPARK%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>1.将spark安装包解压到指定路径</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-zvxf</span> /usr/package27/spark-2.4.3-bin-hadoop2.7.tar.gz <span class="token parameter variable">-C</span> /usr/spark/spark-2.4.3-bin-hadoop2.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.文件&#x2F;etc&#x2F;profile中配置环境变量SPARK_HOME，将spark安装路径中的bin目录加入path系统变量，注意生效变量</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/profile<span class="token builtin class-name">export</span> <span class="token assign-left variable">SPARK_HOME</span><span class="token operator">=</span>/usr/spark/spark-2.4.3-bin-hadoop2.7/<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$SPARK_HOME</span>/bin<span class="token builtin class-name">source</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>3.修改spark-env.sh，设置主机节点为master,java路径，节点内存8g,hadoop安装目录，hadoop配置目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> spark-env.sh<span class="token assign-left variable">SPARK_MASTER_IP</span><span class="token operator">=</span>master的IP地址<span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/java/jdk-8u211-linux-x64<span class="token assign-left variable">HADOOP_HOME</span><span class="token operator">=</span>/usr/hadoop/hadoop-2.7.7<span class="token assign-left variable">HADOOP_CONF_DIR</span><span class="token operator">=</span>/usr/hadoop/etc/hadoop<span class="token assign-left variable">SPARK_WORKER_MEMORY</span><span class="token operator">=</span>8G<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4.修改slaves文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> <span class="token variable">$SPARK_HOME</span>/conf/slavesslave1slave2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>5.开启spark集群</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$SPARK_HOME</span>/sbin/start-all.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> linux spark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第四模块 HIVE搭建</title>
      <link href="/2023/04/01/%E7%AC%AC%E5%9B%9B%E6%A8%A1%E5%9D%97%20HIVE%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/04/01/%E7%AC%AC%E5%9B%9B%E6%A8%A1%E5%9D%97%20HIVE%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="HIVE数仓-mysql-slave2"><a href="#HIVE数仓-mysql-slave2" class="headerlink" title="HIVE数仓(mysql slave2)"></a>HIVE数仓(mysql slave2)</h2><p>1.关闭mysql开机自启</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl disable mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.开启mysql服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.判断mysqld.log下是否生成出临时密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">grep</span> password /var/log/mysqld.log <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.设置mysql数据库本地root用户密码为123456</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span><span class="token operator">></span> 此处写初始密码alter user root@<span class="token string">'%'</span> identified by <span class="token string">'123456'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>5.解压hive安装包至指定目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-zxf</span> /root/package277/apache-hive-2.3.4-bin.tar.gz <span class="token parameter variable">-C</span> /usr/hive<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6.配置hive环境变量，并生效</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/profile<span class="token builtin class-name">export</span> <span class="token assign-left variable">HIVE_HOME</span><span class="token operator">=</span>/usr/hive/apache-hive-2.3.4-bin<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$HIVE_HOME</span>/bin<span class="token builtin class-name">.</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>7.设置hive运行环境，配置Hadoop_home,hive_conf_dir（hive配置文件）,hive_aux_jars_path(资源库)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /usr/hive/apache-hive-2.3.4-bin/conf/hive-env.sh<span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_HOME</span><span class="token operator">=</span>/usr/hadoop/hadoop-2.7.7<span class="token builtin class-name">export</span> <span class="token assign-left variable">HIVE_CONF_DIR</span><span class="token operator">=</span>/usr/hive/apache-hive-2.3.4-bin/conf<span class="token builtin class-name">export</span> <span class="token assign-left variable">HIVE_AUX_JARS_PATH</span><span class="token operator">=</span>/usr/hive/apache-hive-2.3.4-bin/lib<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>8.解决jline冲突</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> <span class="token variable">$HIVE_HOME</span>/lib/jline-2.12.jar <span class="token variable">$HADOOP_HOME</span>/share/hadoop/yarn/lib<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="slave1作为服务器配置hive-site-xml"><a href="#slave1作为服务器配置hive-site-xml" class="headerlink" title="slave1作为服务器配置hive-site.xml"></a>slave1作为服务器配置hive-site.xml</h5><p>9.拷贝jdbc驱动到对应的lib下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> mysql-connector-java-5.1.47-bin.jar <span class="token variable">$HIVE_HOME</span>/lib<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>10.配置元数据存储位置，数据库连接，连接jdbc的URL地址主机名及默认端口号3306，自行创建数据库，ssl连接为false,数据库连接用户&#x2F;密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> <span class="token variable">$HIVE_HOME</span>/conf/hive-site.xml<span class="token operator">&lt;</span>configuration<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>hive.metastore.warehouse.dir<span class="token operator">&lt;</span>/name<span class="token operator">></span><span class="token operator">&lt;</span>value<span class="token operator">></span>/usr/hive_remote/warehouse<span class="token operator">&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>javax.jdo.option.ConnectionDriverName<span class="token operator">&lt;</span>/name<span class="token operator">></span><span class="token operator">&lt;</span>value<span class="token operator">></span>com.mysql.jdbc.Driver<span class="token operator">&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>javax.jdo.option.ConnectionURL<span class="token operator">&lt;</span>/name<span class="token operator">></span><span class="token operator">&lt;</span>value<span class="token operator">></span>jdbc:mysql://slave2:3306/hive?createDatabaseIfNotExist<span class="token operator">=</span>true<span class="token operator">&amp;</span>amp<span class="token punctuation">;</span><span class="token assign-left variable">useSSL</span><span class="token operator">=</span>false<span class="token operator">&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>javax.jdo.option.ConnectionUserName<span class="token operator">&lt;</span>/name<span class="token operator">></span><span class="token operator">&lt;</span>value<span class="token operator">></span>root<span class="token operator">&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>javax.jdo.option.ConnectionPassword<span class="token operator">&lt;</span>/name<span class="token operator">></span><span class="token operator">&lt;</span>value<span class="token operator">></span><span class="token number">12345</span><span class="token operator"><span class="token file-descriptor important">6</span>&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>/configuration<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="master作为客户端的配置hive-site-xml"><a href="#master作为客户端的配置hive-site-xml" class="headerlink" title="master作为客户端的配置hive-site.xml"></a>master作为客户端的配置hive-site.xml</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> <span class="token variable">$HIVE_HOME</span>/conf/hive-site.xml<span class="token operator">&lt;</span>configuration<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>hive.metastore.uris<span class="token operator">&lt;</span>/name<span class="token operator">></span>         <span class="token comment">#此处的uris指向服务器（slave1）开放的端口</span><span class="token operator">&lt;</span>value<span class="token operator">></span>thrift://slave1:908<span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>hive.metastore.local<span class="token operator">&lt;</span>/name<span class="token operator">></span>         <span class="token comment">#是否关闭本地模式</span><span class="token operator">&lt;</span>value<span class="token operator">></span>true<span class="token operator">&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>hive.metastore.warehouse.dir<span class="token operator">&lt;</span>/name<span class="token operator">></span>     <span class="token comment">#配置客户端hive元数据存放的位置</span><span class="token operator">&lt;</span>value<span class="token operator">></span>/usr/hive_remote/warehouse<span class="token operator">&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>/configuration<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="hive服务器初始化数据库，启动metastore服务-slave1"><a href="#hive服务器初始化数据库，启动metastore服务-slave1" class="headerlink" title="hive服务器初始化数据库，启动metastore服务(slave1)"></a>hive服务器初始化数据库，启动metastore服务(slave1)</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">schematool <span class="token parameter variable">--dbType</span> mysql <span class="token parameter variable">--initSchema</span>         <span class="token comment">#初始化hive,mysql出现57张表</span>hive <span class="token parameter variable">--service</span> metastore  <span class="token comment">#启动hive服务</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="hive客户端启动hive，并创建hive数据库（master）"><a href="#hive客户端启动hive，并创建hive数据库（master）" class="headerlink" title="hive客户端启动hive，并创建hive数据库（master）"></a>hive客户端启动hive，并创建hive数据库（master）</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hivecreate database hive<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> linux hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第三模块 Hadoop集群部署</title>
      <link href="/2023/04/01/%E7%AC%AC%E4%B8%89%E6%A8%A1%E5%9D%97%20Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/"/>
      <url>/2023/04/01/%E7%AC%AC%E4%B8%89%E6%A8%A1%E5%9D%97%20Hadoop%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="模块三、Hadoop集群部署"><a href="#模块三、Hadoop集群部署" class="headerlink" title="模块三、Hadoop集群部署"></a>模块三、Hadoop集群部署</h2><p>1.按照左侧虚拟机名称修改对应主机名（分别为master,slave1,slave2）,使用<strong>hostnamectl</strong>命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">master<span class="token operator">></span> hostnamectl set-hostname master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">slave<span class="token operator"><span class="token file-descriptor important">1</span>></span> hostnamectl set-hostname slave1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">slave<span class="token operator"><span class="token file-descriptor important">2</span>></span> hostnamectl set-hostname slave2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.修改hosts文件添加左侧master,slave1,slave2节点IP，主机名映射（M,S,S）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/hostsip地址 masterip地址 slave1ip地址 slave2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">scp</span> /etc/hosts slave1:/etc/<span class="token function">scp</span> /etc/hosts slave2:/etc/  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3.时区更改为上海时间(M,S,S)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> <span class="token parameter variable">-f</span> /etc/localtime <span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/share/zoneinfo/Asia/Shanghai<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.环境已安装ntp，修改master节点ntp配置，设置master为本地时间服务器，屏蔽默认server，服务器层级设为10（M）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/ntp.conf<span class="token comment"># 1.注释掉原来的server</span><span class="token comment"># 2.添加如下内容</span>server <span class="token number">127.127</span>.1.0fudge <span class="token number">127.127</span>.1.0 stratum <span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>5.开启ntp服务（M）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start ntpd <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6.添加定时任务（S,S）–在早十晚五时间段内每隔半小时同步一次本地服务器时间（24小时制，使用用户root任务调度crontab，服务器地址使用主机名）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root<span class="token operator">></span> <span class="token function">crontab</span> <span class="token parameter variable">-e</span>*/30 <span class="token number">10</span>-17 * * * /usr/sbin/ntpdate master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>7.主节点生成公钥钥匙id_rsa.pub(M)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>8.建立master自身使用root用户ssh访问localhost免密登录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-copy-id localhost<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>9.建立master使用root用户到salve1免密登录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-copy-id slave1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>10.建立master使用root用户到slave2免密登录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-copy-id slave2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>11.将jdk安装包解压到&#x2F;usr&#x2F;java目录下（安装包存放于&#x2F;usr&#x2F;package277,路径自行创建，解压后文件夹默认名称，其他安装同理）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /usr/java <span class="token operator">&amp;&amp;</span> <span class="token function">tar</span> <span class="token parameter variable">-zxf</span> /usr/package277/jdk-8u211-linux-x64.tar.gz <span class="token parameter variable">-C</span> /usr/java/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>12.配置系统环境变量JAVA_HOME，同时将jdk安装路径中bin目录加入PATH 系统变量，注意生效变量，查看jdk版本</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/profile<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/java/jdk-8u211-linux-x64<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$JAVA_HOME</span>/bin<span class="token builtin class-name">.</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="zookeeper"><a href="#zookeeper" class="headerlink" title="zookeeper"></a>zookeeper</h4><p>1.解压zookeeper至指定目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /usr/zookeeper <span class="token operator">&amp;&amp;</span> <span class="token function">tar</span> <span class="token parameter variable">-zxf</span> /usr/package277/zookeeper-3.4.14.tar.gz <span class="token parameter variable">-C</span> /usr/zookeeper<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.配置ZOOKEEPER_HOME,并将bin目录加入PATH系统变量</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> etc/profile<span class="token builtin class-name">export</span> <span class="token assign-left variable">ZOOKEEPER_HOME</span><span class="token operator">=</span>/usr/zookeeper/zookeeper-3.4.14<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$ZOOKEEPER_HOME</span>/bin<span class="token builtin class-name">.</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.修改zoo_sample.cfg为zoo.cfg</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mv</span> zoo_sample.cfg zoo.cfg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.设置数据存储路径</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dataDir <span class="token operator">=</span> /usr/zookeeper/zookeeper-3.4.14/zkdata<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5.设置日志存储路径</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dataLogDir <span class="token operator">=</span> /usr/zookeeper/zookeeper-3.4.14/zkdatalog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6.设置集群列表</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">server.1</span><span class="token operator">=</span>master:2888:3888<span class="token assign-left variable">server.2</span><span class="token operator">=</span>slave1:2888:3888<span class="token assign-left variable">server.3</span><span class="token operator">=</span>slave2:2888:3888<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>7.创建文件夹（数据，日志）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /usr/zookeeper/zookeeper-3.4.14/zkdata <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> <span class="token parameter variable">-P</span> zkdatalog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>8.数据存储路径下写入标识主机服务器序号</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token number">1</span> <span class="token operator">></span> /usr/zookeeper/zookeeper-3.4.14/zkdata/myid <span class="token punctuation">(</span>M<span class="token punctuation">)</span><span class="token builtin class-name">echo</span> <span class="token number">2</span> <span class="token operator">></span> /usr/zookeeper/zookeeper-3.4.14/zkdata/myid <span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token builtin class-name">echo</span> <span class="token number">3</span> <span class="token operator">></span> /usr/zookeeper/zookeeper-3.4.14/zkdata/myid <span class="token punctuation">(</span>S<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>9.启动zookeeper进程，查看进程是否存在(M,S,S)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">zkServer.sh startjps<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>10.查看各节点服务是否正常(M,S,S)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">zkServer.sh status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>11.hadoop集群搭建</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-zxf</span> /usr/package277/hadoop-2.7.7.tar.gz <span class="token parameter variable">-C</span> /usr/hadoop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>12.配置环境变量HADOOP_HOME,将Hadoop安装路径中bin目录加入系统变量，注意生效变量</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/profile<span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_HOME</span><span class="token operator">=</span>/usr/hadoop/hadoop-2.7.7<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$HADOOP_HOME</span>/bin:<span class="token variable">$HADOOP_HOME</span>/sbin<span class="token builtin class-name">.</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>13.配置Hadoop运行环境JAVA_HOME</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /usr/hadoop/hadoop-2.7.7/etc/hadoop/hadoop-env.sh<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/java/jdk-8u211-linux-x64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>14.设置全局参数，指定hdfs上namenode地址为master：默认端口为：9000</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /usr/hadoop/hadoop-xx-x/etc/hadoop/core-site.xml<span class="token operator">&lt;</span>configuration<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>fs.default.name<span class="token operator">&lt;</span>/name<span class="token operator">></span><span class="token operator">&lt;</span>value<span class="token operator">></span>hdfs://master:900<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>hadoop.tmp.dir<span class="token operator">&lt;</span>/name<span class="token operator">></span><span class="token operator">&lt;</span>value<span class="token operator">></span>/root/hadoopData/tmp<span class="token operator">&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>16.设置hdfs参数，指定备份文本数量为2</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>configuration<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>dfs.namenode.name.dir<span class="token operator">&lt;</span>/name<span class="token operator">></span><span class="token operator">&lt;</span>value<span class="token operator">></span>/root/hadooopData/name<span class="token operator">&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>dfs.datanode.data.dir<span class="token operator">&lt;</span>/name<span class="token operator">></span><span class="token operator">&lt;</span>value<span class="token operator">></span>/root/hadoopData/data<span class="token operator">&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>dfs.replication<span class="token operator">&lt;</span>/name<span class="token operator">></span><span class="token operator">&lt;</span>value<span class="token operator">></span><span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>dfs.datanode.use.datanode.hostname<span class="token operator">&lt;</span>/name<span class="token operator">></span><span class="token operator">&lt;</span>value<span class="token operator">></span>true<span class="token operator">&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>dfs.permissions<span class="token operator">&lt;</span>/name<span class="token operator">></span><span class="token operator">&lt;</span>value<span class="token operator">></span>false<span class="token operator">&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>/configuration<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>17.设置yarn运行环境java_home参数</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /usr/hadoop/hadoop-xx-x/etc/hadoop/yarn-env.sh<span class="token comment">#some java parameters</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/root/java/jdk-xx-x<span class="token function">vim</span> yarn-site.xml<span class="token operator">&lt;</span>configuration<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>yarn.resourcemanager.admin.address<span class="token operator">&lt;</span>/name<span class="token operator">></span><span class="token operator">&lt;</span>value<span class="token operator">></span>master:1814<span class="token operator"><span class="token file-descriptor important">1</span>&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>yarn.nodemanager.aux-services<span class="token operator">&lt;</span>/name<span class="token operator">></span><span class="token operator">&lt;</span>value<span class="token operator">></span>mapreduce_shuffle<span class="token operator">&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>18.设置计算框架参数，指定mr在yarn上执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> mapreduce-defalut.xml marped-site.xml<span class="token function">vim</span> mapred-site.xml<span class="token operator">&lt;</span>configuration<span class="token operator">></span><span class="token operator">&lt;</span>property<span class="token operator">></span><span class="token operator">&lt;</span>name<span class="token operator">></span>mapreduce.framework.name<span class="token operator">&lt;</span>/name<span class="token operator">></span><span class="token operator">&lt;</span>value<span class="token operator">></span>yarn<span class="token operator">&lt;</span>/value<span class="token operator">></span><span class="token operator">&lt;</span>/property<span class="token operator">></span><span class="token operator">&lt;</span>/configuration<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>19.设置节点文件，要求master为主节点，slave1、slave2为从节点</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">'slave1\nslave2'</span> <span class="token operator">></span> slaves<span class="token builtin class-name">echo</span> <span class="token string">'master'</span> <span class="token operator">></span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>20.对系统进行格式化</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hdfs namenode <span class="token parameter variable">-format</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>21.启动hadoop，并查看各个节点</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">start-all.sh <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>22.查看集群运行状态是否正常</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">jps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> linux hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第二模块 mysql操作</title>
      <link href="/2023/04/01/%E7%AC%AC%E4%BA%8C%E6%A8%A1%E5%9D%97%20mysql%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/04/01/%E7%AC%AC%E4%BA%8C%E6%A8%A1%E5%9D%97%20mysql%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>前提说明<br>相关文件已经存放至环境&#x2F;root&#x2F;docker&#x2F;中。<br>题目所需文件目录，如没有请自行创建。<br>需进行本地yum源配置，相关rpm包存放在&#x2F;opt&#x2F;yum&#x2F;中。<br>注：yum环境按照第一部分最后一题完成配置<br>题目说明</p><h2 id="1-进行mysql的搭建安装"><a href="#1-进行mysql的搭建安装" class="headerlink" title="1.进行mysql的搭建安装"></a>1.进行mysql的搭建安装</h2><p>通过配置的yum源安装mysql-community-server</p><h2 id="2-安装完成启动mysql服务"><a href="#2-安装完成启动mysql服务" class="headerlink" title="2.安装完成启动mysql服务"></a>2.安装完成启动mysql服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看mysql服务状态：systemctl status mysqld</p><h2 id="3-查看默认密码，登陆mysql并修改本地密码为123456"><a href="#3-查看默认密码，登陆mysql并修改本地密码为123456" class="headerlink" title="3.查看默认密码，登陆mysql并修改本地密码为123456"></a>3.查看默认密码，登陆mysql并修改本地密码为123456</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">grep</span> <span class="token string">'password'</span> /var/log/mysqld.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意mysql5.7默认安装后为root用户随机生成一个密码；<br>直接查看密码：grep “temporary password” &#x2F;var&#x2F;log&#x2F;mysqld.log<br>登入数据库：mysql -u root -p<br>输入随机密码即可登录；<br>根据要求设置密码，注意对应的安全策略修改；<br>设置密码强度为低级：set global validate_password_policy&#x3D;0;<br>设置密码长度：set global validate_password_length&#x3D;<font color=pink size=10px><strong>????</strong></font>;<br>修改本地密码：alter user ‘root‘@’localhost’ identified by <font color=pink size=10px><strong>????</strong></font>;</p><h2 id="4-创建‘root‘-’-’-远程连接用户，密码设置为123456"><a href="#4-创建‘root‘-’-’-远程连接用户，密码设置为123456" class="headerlink" title="4.创建‘root‘@’%’ 远程连接用户，密码设置为123456"></a>4.创建‘root‘@’%’ 远程连接用户，密码设置为123456</h2><p>根据要求满足任意主机节点root的远程访问权限；<br>create user <strong>‘<font color=pink size=10px><strong>????</strong></font>‘</strong>@’%’ identified by ‘<font color=pink size=10px><strong>????</strong></font>‘;<br>grant all privileges on <em>.</em> to ‘<font color=pink size=10px><strong>????</strong></font>‘@’%’ with grant option;<br>注意刷新权限:flush privileges;</p><p>根据要求配置mysql</p><p>开启日志功能&#x3D;on：set global general_log&#x3D;on;<br>设置输出类型为file：set global log_output&#x3D;”file”;<br>设置日志文件保存位置为&#x2F;tmp&#x2F;mysql_general.log：<br>set global general_log_file&#x3D;’&#x2F;tmp&#x2F;mysql_general.log’;</p><h2 id="5-登录mysql创建demo数据库"><a href="#5-登录mysql创建demo数据库" class="headerlink" title="5.登录mysql创建demo数据库"></a>5.登录mysql创建demo数据库</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span><span class="token operator">></span> create database demo<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="6-清洗-x2F-root-x2F-docker-x2F-web-log日志文件，将第一列IP字段与访问时间字段写入到-x2F-root-x2F-data-csv文件中，清洗数据内容缺省。"><a href="#6-清洗-x2F-root-x2F-docker-x2F-web-log日志文件，将第一列IP字段与访问时间字段写入到-x2F-root-x2F-data-csv文件中，清洗数据内容缺省。" class="headerlink" title="6.清洗&#x2F;root&#x2F;docker&#x2F;web.log日志文件，将第一列IP字段与访问时间字段写入到&#x2F;root&#x2F;data.csv文件中，清洗数据内容缺省。"></a>6.清洗&#x2F;root&#x2F;docker&#x2F;web.log日志文件，将第一列IP字段与访问时间字段写入到&#x2F;root&#x2F;data.csv文件中，清洗数据内容缺省。</h2><p>（例：172.31.0.1,2022:11:32:37）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">awk</span> <span class="token parameter variable">-v</span> <span class="token assign-left variable">OFS</span><span class="token operator">=</span><span class="token string">','</span> <span class="token string">'&#123;print $1,$4" "$5&#125;'</span> /root/docker/web.log <span class="token operator">></span> /root/data.csvmysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="7-在数据库demo中创建web表，并将整理的数据-x2F-root-x2F-data-csv-导入到web表中"><a href="#7-在数据库demo中创建web表，并将整理的数据-x2F-root-x2F-data-csv-导入到web表中" class="headerlink" title="7.在数据库demo中创建web表，并将整理的数据&#x2F;root&#x2F;data.csv 导入到web表中"></a>7.在数据库demo中创建web表，并将整理的数据&#x2F;root&#x2F;data.csv 导入到web表中</h2><p>在导入数据前，需要把data.csv 文件复制到&#x2F;var&#x2F;lib&#x2F;mysql-files文件中</p><p>查看security关键字参数</p><p>show global variables like ‘%secure%’;<br>将data.csv文件复制到&#x2F;var&#x2F;lib&#x2F;mysql-files&#x2F;目录下</p><p>cp &#x2F;root&#x2F;data.csv &#x2F;var&#x2F;lib&#x2F;mysql-files&#x2F;</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">use democreate table web(ip varchar(255),mydate varchar(255));  load data local infile &#39;&#x2F;var&#x2F;lib&#x2F;mysql-files&#x2F;data.csv&#39; into table web fields terminated by &#39;,&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="8-统计web表数据量并写入到-x2F-root-x2F-demo-x2F-sum-txt-中，注意：demo目录是否存在。"><a href="#8-统计web表数据量并写入到-x2F-root-x2F-demo-x2F-sum-txt-中，注意：demo目录是否存在。" class="headerlink" title="8.统计web表数据量并写入到 &#x2F;root&#x2F;demo&#x2F;sum.txt 中，注意：demo目录是否存在。"></a>8.统计web表数据量并写入到 &#x2F;root&#x2F;demo&#x2F;sum.txt 中，注意：demo目录是否存在。</h2><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">root&gt; mkdir &#x2F;root&#x2F;demomysql&gt; select count(*) from web into outfile &#39;&#x2F;root&#x2F;demo&#x2F;sum.txt&#39; ;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="9-备份demo库，-B参数备份和恢复，备份至-x2F-root-x2F-demo-x2F-demo-sql-中。"><a href="#9-备份demo库，-B参数备份和恢复，备份至-x2F-root-x2F-demo-x2F-demo-sql-中。" class="headerlink" title="9.备份demo库，-B参数备份和恢复，备份至 &#x2F;root&#x2F;demo&#x2F;demo.sql 中。"></a>9.备份demo库，-B参数备份和恢复，备份至 &#x2F;root&#x2F;demo&#x2F;demo.sql 中。</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysqldump <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p123456</span> <span class="token parameter variable">-B</span> <span class="token builtin class-name">test</span> <span class="token operator">></span> /root/demo/demo.sql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="10-删除demo数据库。"><a href="#10-删除demo数据库。" class="headerlink" title="10.删除demo数据库。"></a>10.删除demo数据库。</h2><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">drop database demo;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="11-把备份的demo数据库进行恢复。"><a href="#11-把备份的demo数据库进行恢复。" class="headerlink" title="11.把备份的demo数据库进行恢复。"></a>11.把备份的demo数据库进行恢复。</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p123456</span> <span class="token operator">&lt;</span> /root/demo/demo.sql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参考命令</p><p>启动mysql服务：systemctl start mysqld<br>关闭mysql服务：systemctl stop mysqld</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一模块 linux操作</title>
      <link href="/2023/04/01/%E7%AC%AC%E4%B8%80%E6%A8%A1%E5%9D%97%20linux%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/04/01/%E7%AC%AC%E4%B8%80%E6%A8%A1%E5%9D%97%20linux%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>1.创建一个名为admin的组</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">groupadd</span> admin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.创建一个名为apple的用户，以admin作为附加组</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">useradd</span> apple <span class="token parameter variable">-G</span> admin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.创建banana用户，以admin作为附加组；创建cherry用户，用户不许登录系统，admin不是其附加组</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">useradd</span> banana <span class="token parameter variable">-G</span> admin<span class="token punctuation">;</span> <span class="token function">useradd</span> cherry <span class="token parameter variable">-s</span> /usr/sbin/nologin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.apple，banana，cherry必须以123456作为用户密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">passwd</span> apple<span class="token number">123456</span><span class="token function">passwd</span> banana<span class="token number">123456</span><span class="token function">passwd</span> cherry<span class="token number">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>5.拷贝文件&#x2F;root&#x2F;docker&#x2F;web.log到&#x2F;opt&#x2F;web.log，配置文件&#x2F;opt&#x2F;web.log的权限。</p><p>（1）文件&#x2F;opt&#x2F;web.log的拥有者是root用户</p><p>（2）文件&#x2F;opt&#x2F;web.log属于admin组</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chown</span> root:admin /opt/web.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（3）文件&#x2F;opt&#x2F;web.log对任何人都不可执行(包括root)，拥有者可读可写，所属组可读可写，其他人仅可读</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token number">664</span> /opt/web.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（4）用户apple能够对文件&#x2F;opt&#x2F;web.log具有读和写操作权限，但没有删除权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">setfacl <span class="token parameter variable">-m</span> u:apple:5 /opt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（5）用户banana对文件&#x2F;opt&#x2F;web.log没有任何权限</p><pre class="line-numbers language-shel" data-language="shel"><code class="language-shel">setfacl -m u:banana:0 &#x2F;opt&#x2F;web.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6.每周一到周六凌晨3点20分，运行tar命令(&#x2F;usr&#x2F;bin&#x2F;tar)对&#x2F;etc&#x2F;fstab进行存档另存，存储位置为&#x2F;opt&#x2F;etc-fstab.tar.gz</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">20</span> <span class="token number">3</span> * * <span class="token number">1</span>-6 /usr/bin/tar czf /opt/etc-fstab.tar.gz /etc/fstab<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>7.每周日凌晨2点30分，运行cp命令(&#x2F;usr&#x2F;bin&#x2F;cp)对&#x2F;etc&#x2F;fstab文件进行备份，存储位置为&#x2F;opt&#x2F;etc-fstab</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">30</span> <span class="token number">2</span> * * <span class="token number">0</span> /usr/bin/cp /etc/fstab /opt/etc-fstab<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>8.每月1号、10号、22号凌晨4点每10分钟运行cp命令(&#x2F;usr&#x2F;bin&#x2F;cp)对&#x2F;etc&#x2F;passwd文件进行备份，存储位置为&#x2F;opt&#x2F;etc-passwd</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">*/10 <span class="token number">4</span> <span class="token number">1,10</span>,22 * * /usr/bin/cp /etc/passwd /opt/etc-passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>9.zip命令压缩&#x2F;etc进行存档另存，存储位置为&#x2F;opt&#x2F;etc.zip</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">zip</span> <span class="token parameter variable">-r</span> /opt/etc.zip /etc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>10.将上一题所压缩的&#x2F;opt&#x2F;etc.zip包，指定解压到&#x2F;opt&#x2F;test目录中，覆盖原有文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">unzip</span> /opt/etc.zip <span class="token parameter variable">-c</span> /opt/test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>11.使用find命令查找&#x2F;etc目录下所有目录以及子目录下共有多少个passwd文件（按照文件名搜索，不区分文件名大小），统计数量（输出结果wc -l），将命令写入&#x2F;root&#x2F;find&#x2F;01.sh文件中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">'find /etc -type f  -iname passwd | wc -l'</span> <span class="token operator">></span> /root/find/01.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>12.使用find命令查找&#x2F;usr目录下以及子目录下，査找大小刚好是25KB的文件，统计数量（输出结果wc -l），将命令写入&#x2F;root&#x2F;find&#x2F;02.sh文件中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">'find /usr -type f -size 25k | wc -l'</span> <span class="token operator">></span> /root/find/02.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>13.使用find命令查找&#x2F;etc&#x2F;selinux目录下以及子目录下，一周（7天）内修改的文件，统计数量（输出结果wc -l），将命令写入&#x2F;root&#x2F;find&#x2F;03.sh文件中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">'find /etc/selinux -mtime -7 | wc -l'</span> <span class="token operator">></span> /root/find/03.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>14.使用awk命令，获取&#x2F;opt&#x2F;web.log文件中时间列的信息（如第一行对应为：[27&#x2F;Jul&#x2F;2022:11:32:37 +0800]）将命令写入&#x2F;root&#x2F;awk&#x2F;01.sh文件中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"awk '&#123;print <span class="token variable">$4</span>,<span class="token variable">$5</span>&#125;' /opt/web.log"</span> <span class="token operator">></span> /root/awk/01.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>15.使用awk命令，仅显示&#x2F;opt&#x2F;web.log文件中含有指定关键词“192.168.100.66”的内容，将命令写入&#x2F;root&#x2F;awk&#x2F;02.sh文件中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"awk '<span class="token variable">$0</span> ~ /192.168.100.66/ &#123;print&#125;' /opt/web.log"</span> <span class="token operator">></span> /root/awk/02.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>16.读取&#x2F;opt&#x2F;web.log文件，删除所有带有“113.201.128.162”关键词的行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sed</span> <span class="token string">'/113.201.128.162/d'</span> /opt/web.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>17.读取&#x2F;opt&#x2F;web.log文件，删除第800-1000行的内容</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sed</span> <span class="token string">'800,1000d'</span> /opt/web.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>18.读取&#x2F;opt&#x2F;web.log文件的第150-250行，将结果写入&#x2F;root&#x2F;question&#x2F;01.txt文件中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sed</span> <span class="token parameter variable">-n</span> <span class="token string">'150,250p'</span> /opt/web.log <span class="token operator">></span> /root/qestion/01.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>19.搜索&#x2F;opt&#x2F;web.log文件中，以“172.31.10.75”关键词开头的内容, 将结果写入&#x2F;root&#x2F;question&#x2F;02.txt文件中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sed</span> <span class="token parameter variable">-n</span> <span class="token string">'/^113.201.128.162/p'</span> /opt/web.log <span class="token operator">></span> /root/qestion/02.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>20.输出在&#x2F;opt&#x2F;web.log文件中，包含“192.168.100.66”关键词行的数量, 将结果写入&#x2F;root&#x2F;question&#x2F;03.txt文件中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sed</span> <span class="token parameter variable">-n</span> <span class="token string">'/192.168.100.66/p'</span> /opt/web.log <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span> <span class="token operator">></span> /root/qestion/03.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>21.搜索&#x2F;opt&#x2F;web.log文件中，包含“POST”关键词位置的行号及内容, 将命令写入&#x2F;root&#x2F;question&#x2F;04.sh文件中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"awk '<span class="token variable">$0</span> ~ /POST/ &#123;print NR,<span class="token variable">$0</span>&#125;' /opt/web.log"</span> <span class="token operator">></span> /root/question/04.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>22.搜索&#x2F;opt&#x2F;web.log文件中，空行的数量, 将结果写入&#x2F;root&#x2F;question&#x2F;05.txt文件中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sed</span> <span class="token parameter variable">-n</span> <span class="token string">'/^$/p'</span> /opt/web.log <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>23.Yum配置，使用createrepo（已安装）命令创建本地yum源库（&#x2F;opt&#x2F;yum），gpgcheck设置为0，写入&#x2F;etc&#x2F;yum.repos.d&#x2F;LocalYum.repo文件中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># bug解决</span>yum <span class="token function">install</span> python2<span class="token comment"># vim /usr/share/createrepo/genpkgmetadata.py</span><span class="token comment"># /usr/bin/python修改为/usr/bin/python2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">createrepo /opt/yum <span class="token function">vim</span> /etc/yum.repos.d/LocalYum.repo<span class="token punctuation">[</span>base<span class="token punctuation">]</span><span class="token assign-left variable">name</span><span class="token operator">=</span>base<span class="token assign-left variable">baseUrl</span><span class="token operator">=</span>file:///opt/yum<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先必须删除其它repo文件，如果不删除会导致验证不通过</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hive笔记</title>
      <link href="/2023/04/01/hive%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/04/01/hive%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<br/><p><img src="https://i.328888.xyz/2023/04/02/iHXajQ.png" alt="hive建表语句"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">TBLPROPERTIES <span class="token punctuation">(</span><span class="token string">"skip.header.line.count"</span><span class="token operator">=</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>hive加这个在建表语句最后，可以跳过第一行，第一行通常是表头</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">row</span> format serde <span class="token string">'org.apache.hadoop.hive.serde2.RegexSerDe'</span><span class="token keyword">with</span> serdeproperties<span class="token punctuation">(</span><span class="token string">"input.regex"</span> <span class="token operator">=</span> <span class="token string">"正则表达式"</span><span class="token punctuation">)</span> stored <span class="token keyword">as</span> textfile<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>可以使用正则表达式匹配数据字段，比默认的delimited更灵活</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">unix_timestamp<span class="token punctuation">(</span><span class="token string">"2011 11 07 08:11:33"</span><span class="token punctuation">,</span><span class="token string">"yyyy MM dd HH:mm:ss"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.328888.xyz/2023/04/02/iHIkDC.png" alt="时间格式化"></p><ul><li>时间格式不是 yyyy-MM-dd HH:mm:ss时，把字符串转成时间类型，方便比较</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">case</span> <span class="token keyword">when</span> <span class="token keyword">then</span> <span class="token keyword">when</span> <span class="token keyword">then</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">else</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>分支判断语句</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> log_data<span class="token keyword">WHERE</span> date_time <span class="token operator">>=</span> <span class="token string">'2020-10-26 10:00:00'</span> <span class="token operator">AND</span> date_time <span class="token operator">&lt;</span> <span class="token string">'2020-10-27 10:00:00'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>对于时间格式的数据，可以直接和yyyy-MM-dd HH:mm:ss这种格式的时间字符串比较大小</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">,</span><span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>第一个时偏移量，第二个时查询条数。偏移0个就是从第一条数据开始取；偏移10个就是从第11条数据开始取</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> xxx partitioned <span class="token keyword">by</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>根据一个字段分文件夹</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> xxx <span class="token keyword">clustered</span> <span class="token keyword">by</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>根据一个字段分成小文件</li></ul><pre class="line-numbers language-none"><code class="language-none">select class_id,student_id,sum(score) over(partitioned by class_id order by student_id) as 当前累计总分<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>窗口函数，根据class_id分组后根据student_id排序，再统计从当前学生到第一个学生的累计总分</li></ul><pre class="line-numbers language-none"><code class="language-none">select class_id,student_id,name from xxx group by class_id,student_id grouping sets (class_id,student_id);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>相当于</p><pre class="line-numbers language-none"><code class="language-none">select class_id,student_id,name from xxx groupby class_idunion allselect class_id,student_id,name from xxx groupby student_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br/><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> xx lateral <span class="token keyword">view</span> UDTF<span class="token punctuation">(</span>XXX<span class="token punctuation">)</span> 生成的虚拟表的别名 <span class="token keyword">as</span> 列名<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> linux hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql安装整合版</title>
      <link href="/2023/04/01/mysql%E5%AE%89%E8%A3%85%E6%95%B4%E5%90%88%E7%89%88/"/>
      <url>/2023/04/01/mysql%E5%AE%89%E8%A3%85%E6%95%B4%E5%90%88%E7%89%88/</url>
      
        <content type="html"><![CDATA[<p>5.0安装好之后一共6条命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>.   mysqld --initialize-insecure <span class="token parameter variable">--user</span><span class="token operator">=</span>mysql<span class="token number">2</span>.   systemctl start mysqld<span class="token number">3</span>.   mysql<span class="token number">4</span>.   grant all privileges on *.*  to root@<span class="token string">'%'</span> identified by <span class="token string">'比赛要求改成的远程登录密码'</span><span class="token punctuation">;</span><span class="token number">5</span>.   exit或Ctrl+d<span class="token number">6</span>.   mysqladmin password <span class="token string">'比赛要求改成的本地密码'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>8.0安装好之后一共7条命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>.   mysqld --initialize-insecure <span class="token parameter variable">--user</span><span class="token operator">=</span>mysql<span class="token number">2</span>.   systemctl start mysqld<span class="token number">3</span>.   mysql<span class="token number">4</span>.   CREATE <span class="token environment constant">USER</span> root@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'比赛要求改成的远程登录密码'</span><span class="token punctuation">;</span><span class="token number">5</span>.   grant all privileges on *.* to root@<span class="token string">'%'</span><span class="token punctuation">;</span><span class="token number">6</span>.   exit或Ctrl+d<span class="token number">7</span>.   mysqladmin password <span class="token string">'比赛要求改成的密码'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> linux mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql安装升级版</title>
      <link href="/2023/04/01/mysql%E5%AE%89%E8%A3%85%E5%8D%87%E7%BA%A7%E7%89%88/"/>
      <url>/2023/04/01/mysql%E5%AE%89%E8%A3%85%E5%8D%87%E7%BA%A7%E7%89%88/</url>
      
        <content type="html"><![CDATA[<h3 id="下载MySQL-bundle包"><a href="#下载MySQL-bundle包" class="headerlink" title="下载MySQL bundle包"></a>下载MySQL bundle包</h3><ul><li>打开网址：10.4.0.9，选择bundle包下载即可（浏览器的下载路径在：&#x2F;root&#x2F;Downloads&#x2F;）</li></ul><h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@master Downloads<span class="token punctuation">]</span><span class="token comment"># tar xf mysql-5.7.29.rpm-bundle.tar    # 默认解压到当前目录，散的</span><span class="token punctuation">[</span>root@master Downloads<span class="token punctuation">]</span><span class="token comment"># yum install mysql-community-common-xxx.rpm mysql-community-libs-xxx.rpm </span>                                      mysql-community-client-xxx.rpm mysql-community-server-xxx.rpm <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="初始化并启动MySQL"><a href="#初始化并启动MySQL" class="headerlink" title="初始化并启动MySQL"></a>初始化并启动MySQL</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@master Downloads<span class="token punctuation">]</span><span class="token comment"># mysqld --initialize-insecure --user=mysql # initialize-insecure表示初始化并为root用户设置空密码</span>                                                                   <span class="token comment"># 自己先初始化的好处在于：可以不打开mysql的密码校验插件，也就是随便改密码</span><span class="token punctuation">[</span>root@master Downloads<span class="token punctuation">]</span><span class="token comment"># systemctl start mysqld                    # 或者mysqld --user=mysql &amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@master Downloads<span class="token punctuation">]</span><span class="token comment"># mysql      # 默认登录用户root，以自己shell中的用户为准。初始密码为空-p选项省略，-u选项默认是root省略</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>&#x3D;&#x3D;修改密码的几种方式：&#x3D;&#x3D;</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 第一种方式：</span>mysql<span class="token operator">></span>  <span class="token builtin class-name">set</span> <span class="token assign-left variable">password</span><span class="token operator">=</span>password<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 最简单，只能在mysql5中使用，因为mysql8中没有password()函数</span>                                    <span class="token comment"># 默认修改的用户是登录用户，修改其它用户可以set password for root@localhost = password('1')</span><span class="token comment"># 第二种方式：</span>mysql<span class="token operator">></span>  alter user root@localhost IDENTIFIED BY <span class="token string">'1'</span><span class="token punctuation">;</span> <span class="token comment"># mysql8、mysql5都可以使用，修改密码的官方推荐方式</span><span class="token comment"># 第三种方式：</span><span class="token punctuation">[</span>root@master Downloads<span class="token punctuation">]</span><span class="token comment"># mysqladmin -p'此处应紧跟原密码，有特殊符号应留空，会在下一行要求输入原密码，引号不用加' password '新密码，可留空，引号不用加'</span><span class="token comment"># 最好用的修改密码方式，又短，有兼容，又被官方推荐</span><span class="token comment"># 默认用户是root，由终端决定。指定用户加-u选项</span><span class="token comment"># 示例：mysqladmin -pabc password '1'</span><span class="token comment"># 原密码若是空密码，则 mysqladmin password '1'</span><span class="token comment"># 即省略-p选项</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="远程登录"><a href="#远程登录" class="headerlink" title="远程登录"></a>远程登录</h3><p>MySQL默认不允许root用户远程登录，只能在本地登录。如果你想让root用户远程登录，你需要修改root用户的主机名为’%’，并且授予root用户所有的权限。</p><p>&#x3D;&#x3D;mysql5：&#x3D;&#x3D;</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">mysql<span class="token operator">></span>  <span class="token keyword">grant</span> <span class="token keyword">all</span> <span class="token keyword">privileges</span> <span class="token keyword">on</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">to</span> root<span class="token variable">@'%'</span> identified <span class="token keyword">by</span>  <span class="token string">'1'</span>        <span class="token comment"># 配置权限，同时新增root@'%'用户，密码是1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>&#x3D;&#x3D;mysql8：&#x3D;&#x3D;</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">mysql<span class="token operator">></span>  <span class="token keyword">CREATE</span> <span class="token keyword">USER</span> root<span class="token variable">@'%'</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">'比赛要求改成的远程登录密码'</span><span class="token punctuation">;</span>       <span class="token comment"># 新建了一个root@%用户。%代表任意主机</span>mysql<span class="token operator">></span>  <span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">PRIVILEGES</span> <span class="token keyword">ON</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> root<span class="token variable">@'%'</span><span class="token punctuation">;</span>                               <span class="token comment"># 给root@'%'授权</span>mysql<span class="token operator">></span>  FLUSH <span class="token keyword">PRIVILEGES</span><span class="token punctuation">;</span>                                                      <span class="token comment"># 好像可以不写这行，mysql8试过了不用写也能连</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> linux mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysqldump备份</title>
      <link href="/2023/04/01/mysqldump%E5%A4%87%E4%BB%BD/"/>
      <url>/2023/04/01/mysqldump%E5%A4%87%E4%BB%BD/</url>
      
        <content type="html"><![CDATA[<h2 id="前置操作，建库建表插入数据"><a href="#前置操作，建库建表插入数据" class="headerlink" title="前置操作，建库建表插入数据"></a>前置操作，建库建表插入数据</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>lzq@master ~<span class="token punctuation">]</span>$ mysql <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span>Enter password: Welcome to the MySQL monitor.  Commands end with <span class="token punctuation">;</span> or <span class="token punctuation">\</span>g.Your MySQL connection <span class="token function">id</span> is <span class="token number">12</span>Server version: <span class="token number">8.0</span>.32 MySQL Community Server - GPLCopyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token number">2000</span>, <span class="token number">2023</span>, Oracle and/or its affiliates.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type <span class="token string">'help;'</span> or <span class="token string">'\h'</span> <span class="token keyword">for</span> help. Type <span class="token string">'\c'</span> to <span class="token function">clear</span> the current input statement.mysql<span class="token operator">></span> show databases<span class="token punctuation">;</span>+--------------------+<span class="token operator">|</span> Database           <span class="token operator">|</span>+--------------------+<span class="token operator">|</span> information_schema <span class="token operator">|</span><span class="token operator">|</span> mysql              <span class="token operator">|</span><span class="token operator">|</span> performance_schema <span class="token operator">|</span><span class="token operator">|</span> sys                <span class="token operator">|</span>+--------------------+<span class="token number">4</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.07</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> create database <span class="token builtin class-name">test</span><span class="token punctuation">;</span>Query OK, <span class="token number">1</span> row affected <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> use <span class="token builtin class-name">test</span><span class="token punctuation">;</span>Database changedmysql<span class="token operator">></span> create table student<span class="token punctuation">(</span>id int, name varchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">))</span><span class="token punctuation">;</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.06</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> insert into student values<span class="token punctuation">(</span><span class="token number">1</span>,<span class="token string">"xiaoming"</span><span class="token punctuation">)</span>,<span class="token punctuation">(</span><span class="token number">2</span>,<span class="token string">"lili"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Query OK, <span class="token number">2</span> rows affected <span class="token punctuation">(</span><span class="token number">0.10</span> sec<span class="token punctuation">)</span>Records: <span class="token number">2</span>  Duplicates: <span class="token number">0</span>  Warnings: <span class="token number">0</span>mysql<span class="token operator">></span> show databases<span class="token punctuation">;</span>+--------------------+<span class="token operator">|</span> Database           <span class="token operator">|</span>+--------------------+<span class="token operator">|</span> information_schema <span class="token operator">|</span><span class="token operator">|</span> mysql              <span class="token operator">|</span><span class="token operator">|</span> performance_schema <span class="token operator">|</span><span class="token operator">|</span> sys                <span class="token operator">|</span><span class="token operator">|</span> <span class="token builtin class-name">test</span>               <span class="token operator">|</span>+--------------------+<span class="token number">4</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">select</span> * from student<span class="token punctuation">;</span>+------+----------+<span class="token operator">|</span> <span class="token function">id</span>   <span class="token operator">|</span> name     <span class="token operator">|</span>+------+----------+<span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> xiaoming <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> lili     <span class="token operator">|</span>+------+----------+<span class="token number">2</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token builtin class-name">exit</span>Bye<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>lzq@master ~<span class="token punctuation">]</span>$ <span class="token function">su</span>密码：<span class="token punctuation">[</span>root@master lzq<span class="token punctuation">]</span><span class="token comment"># mysqldump -uroot -p test > /root/test.db</span>Enter password: <span class="token punctuation">[</span>root@master lzq<span class="token punctuation">]</span><span class="token comment"># ll /root/test.db</span>-rw-r--r--. <span class="token number">1</span> root root <span class="token number">1886</span> <span class="token number">2</span>月  <span class="token number">16</span> <span class="token number">12</span>:26 /root/test.db<span class="token punctuation">[</span>root@master lzq<span class="token punctuation">]</span><span class="token comment"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="删库"><a href="#删库" class="headerlink" title="删库"></a>删库</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@master lzq<span class="token punctuation">]</span><span class="token comment"># mysql -uroot -p</span>Enter password: Welcome to the MySQL monitor.  Commands end with <span class="token punctuation">;</span> or <span class="token punctuation">\</span>g.Your MySQL connection <span class="token function">id</span> is <span class="token number">14</span>Server version: <span class="token number">8.0</span>.32 MySQL Community Server - GPLCopyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token number">2000</span>, <span class="token number">2023</span>, Oracle and/or its affiliates.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type <span class="token string">'help;'</span> or <span class="token string">'\h'</span> <span class="token keyword">for</span> help. Type <span class="token string">'\c'</span> to <span class="token function">clear</span> the current input statement.mysql<span class="token operator">></span> drop database <span class="token builtin class-name">test</span><span class="token punctuation">;</span>Query OK, <span class="token number">1</span> row affected <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> show databases<span class="token punctuation">;</span>+--------------------+<span class="token operator">|</span> Database           <span class="token operator">|</span>+--------------------+<span class="token operator">|</span> information_schema <span class="token operator">|</span><span class="token operator">|</span> mysql              <span class="token operator">|</span><span class="token operator">|</span> performance_schema <span class="token operator">|</span><span class="token operator">|</span> sys                <span class="token operator">|</span>+--------------------+<span class="token number">4</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token builtin class-name">exit</span>Bye<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@master lzq<span class="token punctuation">]</span><span class="token comment"># mysql -uroot -p</span>Enter password: Welcome to the MySQL monitor.  Commands end with <span class="token punctuation">;</span> or <span class="token punctuation">\</span>g.Your MySQL connection <span class="token function">id</span> is <span class="token number">16</span>Server version: <span class="token number">8.0</span>.32 MySQL Community Server - GPLCopyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token number">2000</span>, <span class="token number">2023</span>, Oracle and/or its affiliates.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type <span class="token string">'help;'</span> or <span class="token string">'\h'</span> <span class="token keyword">for</span> help. Type <span class="token string">'\c'</span> to <span class="token function">clear</span> the current input statement.mysql<span class="token operator">></span> create database <span class="token builtin class-name">test</span><span class="token punctuation">;</span>Query OK, <span class="token number">1</span> row affected <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> use <span class="token builtin class-name">test</span><span class="token punctuation">;</span>Database changedmysql<span class="token operator">></span> <span class="token builtin class-name">source</span> /root/test.dbQuery OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.03</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.03</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">2</span> rows affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>Records: <span class="token number">2</span>  Duplicates: <span class="token number">0</span>  Warnings: <span class="token number">0</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> show tables<span class="token punctuation">;</span>+----------------+<span class="token operator">|</span> Tables_in_test <span class="token operator">|</span>+----------------+<span class="token operator">|</span> student        <span class="token operator">|</span>+----------------+<span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">select</span> * from student<span class="token punctuation">;</span>+------+----------+<span class="token operator">|</span> <span class="token function">id</span>   <span class="token operator">|</span> name     <span class="token operator">|</span>+------+----------+<span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> xiaoming <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> lili     <span class="token operator">|</span>+------+----------+<span class="token number">2</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token builtin class-name">exit</span>Bye<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> linux mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js调试笔记</title>
      <link href="/2023/04/01/js%E9%80%86%E5%90%91%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/04/01/js%E9%80%86%E5%90%91%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="格式化检测"><a href="#格式化检测" class="headerlink" title="格式化检测"></a>格式化检测</h1><p>&#x3D;&#x3D;被检测到风险：爆破内存&#x3D;&#x3D;</p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 该函数可用于检测函数是否格式化，原理：正则表达式</span><span class="token keyword">function</span> <span class="token function">_0x1eb527</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> _0x190510 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">'\x5cw+\x20*\x5c(\x5c)\x20*&#123;\x5cw+\x20*[\x27|\x22].+[\x27|\x22];?\x20*&#125;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> _0x190510<span class="token punctuation">[</span><span class="token string">'test'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>_0x2854df<span class="token punctuation">[</span><span class="token string">'removeCookie'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'toString'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">其中_0x2854df[&#39;removeCookie&#39;][&#39;toString&#39;]()的值<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>未格式化时<pre class="line-numbers language-none"><code class="language-none">&quot;function()&#123;return&#39;dev&#39;;&#125;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>格式化时候<pre class="line-numbers language-none"><code class="language-none">&quot;function () &#123;              return &#39;dev&#39;;          &#125;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="绕过方法"><a href="#绕过方法" class="headerlink" title="绕过方法"></a>绕过方法</h3><ul><li>与原样本同步调试，遇到函数返回值不一样的地方，手动将其修改为样本的返回值</li></ul><h1 id="反调试（无限debug）"><a href="#反调试（无限debug）" class="headerlink" title="反调试（无限debug）"></a>反调试（无限debug）</h1><p>&#x3D;&#x3D;风险：无法启动F12抓包&#x3D;&#x3D;</p><h3 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">_0x151af2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> _0x2da88a<span class="token punctuation">[</span><span class="token string">'cksFx'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>Function<span class="token punctuation">,</span>         _0x2da88a<span class="token punctuation">[</span><span class="token string">'siVrw'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>            _0x2da88a<span class="token punctuation">[</span><span class="token string">'siVrw'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>                _0x2da88a<span class="token punctuation">[</span><span class="token string">'oZzjd'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> _0x151af2<span class="token punctuation">)</span><span class="token punctuation">,</span>            _0x2da88a<span class="token punctuation">[</span><span class="token string">'NKhFD'</span><span class="token punctuation">]</span>          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span>_0x151af2<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'de'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 首先需要明白该函数的返回值是一个函数，_0x151af2该变量是它的参数，经调试得到其值”bugger“</span><span class="token comment">// _0x2da88a['siVrw']，该对象实际是一个函数，通过翻看源码可知作用仅仅只是把两个参数当作字符串拼接成一个字符串返回</span><span class="token comment">// 此时代码简化后如下：</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> _0x2da88a<span class="token punctuation">[</span><span class="token string">'cksFx'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>Function<span class="token punctuation">,</span>         <span class="token function">concat</span><span class="token punctuation">(</span>            <span class="token function">concat</span><span class="token punctuation">(</span>_0x2da88a<span class="token punctuation">[</span><span class="token string">'oZzjd'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"bugger"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            _0x2da88a<span class="token punctuation">[</span><span class="token string">'NKhFD'</span><span class="token punctuation">]</span>          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'de'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 此时已经有些明朗，再继续下去，调试得到_0x2da88a['oZzjd'] = 'Function(arguments[0]+"'</span><span class="token comment">// 化简最内侧一层concat得到结果 Function(arguments[0]+"bugger</span><span class="token comment">// 继续调试得知_0x2da88a['NKhFD'] = '")()"'</span><span class="token comment">// 再化简下一层 Function(arguments[0]+"bugger")()</span><span class="token comment">// 此时代码如下：</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> _0x2da88a<span class="token punctuation">[</span><span class="token string">'cksFx'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>        Function<span class="token punctuation">,</span>         <span class="token string">'Function(arguments[0]+"bugger")()'</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'de'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 再次翻看_0x2da88a['cksFx']对应的源代码，得知它也是一个函数，可生成一个函数，生成的函数中第一个参数作为函数，第二个参数作为被生成函数的参数</span><span class="token comment">// 其源码如下：</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">_0xcf91fc<span class="token punctuation">,</span> _0xda5f16</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">_0xcf91fc</span><span class="token punctuation">(</span>_0xda5f16<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 此时原源代码化简如下：</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">Function</span><span class="token punctuation">(</span><span class="token string">'Function(arguments[0]+"bugger")()'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>_0x529186<span class="token punctuation">[</span><span class="token string">'XUVEM'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'de'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 经查阅资料，使用Function构造方法可以将它的字符串型参数实例化成一个函数</span><span class="token comment">// 也就是说该函数最后返回了另一个函数</span><span class="token comment">// 化简如下：</span><span class="token function">Function</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"bugger"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'de'</span><span class="token punctuation">)</span><span class="token comment">// 继续化简：</span><span class="token function">Function</span><span class="token punctuation">(</span><span class="token string">'de'</span><span class="token operator">+</span><span class="token string">"bugger"</span><span class="token punctuation">)</span><span class="token comment">// 最终结果</span><span class="token function">Function</span><span class="token punctuation">(</span><span class="token string">"debugger"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="绕过方法（注入）"><a href="#绕过方法（注入）" class="headerlink" title="绕过方法（注入）"></a>绕过方法（注入）</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token constant">F_</span> <span class="token operator">=</span> Function<span class="token function-variable function">Function</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">!==</span><span class="token string">'debugger'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token constant">F_</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 如果发现Function函数传入的参数是"debugger"则什么都都不操作</span><span class="token comment">// 如果不是，则返回原函数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br/><h1 id="混淆"><a href="#混淆" class="headerlink" title="混淆"></a>混淆</h1><p>&#x3D;&#x3D;风险：无法查找字符串关键词，看乱码头晕&#x3D;&#x3D;</p><h3 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 1.无意义的函数替换，恶心人</span><span class="token keyword">function</span> <span class="token function">aaa</span><span class="token punctuation">(</span><span class="token parameter">_0x51a5bc<span class="token punctuation">,</span> _0x45629c</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> _0x51a5bc <span class="token operator">+</span> _0x45629c<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">aaa</span><span class="token punctuation">(</span><span class="token string">"de"</span><span class="token punctuation">,</span><span class="token string">"bugger"</span><span class="token punctuation">)</span><span class="token comment">// 2.把函数当做某一对象的属性，通过variable["functionName"]的形式获取到原函数，而不是使用函数名</span><span class="token keyword">var</span> _0x2da88a <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string-property property">'KCckw'</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">_0x248b62<span class="token punctuation">,</span> _0x19db96</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">'value'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string-property property">'zpdwf'</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">_0x5b350f<span class="token punctuation">,</span> _0xe995dc</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">'value'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 3. 加密参数，将一个字符串拆分成两个参数，只有使用了解密函数后才可以看到原字符串的值</span><span class="token string">"cksFx"</span>                       <span class="token comment">// 混淆前：普普通通的字符串</span><span class="token function">_0x2ff2</span><span class="token punctuation">(</span><span class="token string">'a3e8'</span><span class="token punctuation">,</span> <span class="token string">'(Ww8'</span><span class="token punctuation">)</span>       <span class="token comment">// 混淆后：字符串成了函数调用的形式，在开发者工具中可以方便地看到调用后的结果</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="绕过方法-1"><a href="#绕过方法-1" class="headerlink" title="绕过方法"></a>绕过方法</h3><ul><li>chrome开发者工具调试，一点一点看</li><li>在[dejs网站][<a href="https://www.dejs.vip/]%E6%A0%B9%E6%8D%AE%E6%BA%90%E4%BB%A3%E7%A0%81%E7%89%B9%E5%BE%81%EF%BC%8C%E6%89%BE%E5%88%B0%E5%85%B6%E6%B7%B7%E6%B7%86%E7%B1%BB%E5%9E%8B%E5%90%8D%E7%A7%B0%EF%BC%8C%E7%BD%91%E4%B8%8A%E6%90%9C%E7%B4%A2%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99%E5%8D%B3%E5%8F%AF(estraverse.replace)">https://www.dejs.vip/]根据源代码特征，找到其混淆类型名称，网上搜索相关资料即可(estraverse.replace)</a></li><li>自己根据源码特征，使用javascript将源文件中的混淆函数预处理成对应的字符串（正则表达式，模拟解密流程，replace）</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> linux 逆向 javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某班安全连连看</title>
      <link href="/2022/10/02/%E6%9F%90%E7%8F%AD%E5%AE%89%E5%85%A8%E8%BF%9E%E8%BF%9E%E7%9C%8B/"/>
      <url>/2022/10/02/%E6%9F%90%E7%8F%AD%E5%AE%89%E5%85%A8%E8%BF%9E%E8%BF%9E%E7%9C%8B/</url>
      
        <content type="html"><![CDATA[<p><a href="../%E6%9F%90%E7%8F%AD%E7%A7%91%E5%AD%A6%E9%98%B2%E7%96%AB%E7%AD%94%E9%A2%98/index.html">cookie获取调用了《某班科学防疫答题》中的登录代码</a> </p><h2 id="完整代码示例"><a href="#完整代码示例" class="headerlink" title="完整代码示例"></a>完整代码示例</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> unicodedata <span class="token keyword">import</span> combining<span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">import</span> hashlibheaders <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span>    <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36'</span><span class="token punctuation">&#125;</span>url <span class="token operator">=</span> <span class="token string">"http://zz.yiban.cn/topic/2022/selfbelay"</span><span class="token keyword">def</span> <span class="token function">sg</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    para <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'a'</span><span class="token punctuation">:</span><span class="token string">'sg'</span><span class="token punctuation">,</span>    <span class="token string">'_time'</span><span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment"># 加密串</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>params<span class="token operator">=</span>para<span class="token punctuation">,</span>cookies<span class="token operator">=</span>cookies<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">post</span><span class="token punctuation">(</span>dat<span class="token punctuation">,</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>dat<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"_6"</span>    ck <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>data<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>    para <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'a'</span><span class="token punctuation">:</span><span class="token string">'dg'</span><span class="token punctuation">,</span>        <span class="token string">'uc'</span><span class="token punctuation">:</span><span class="token string">'6'</span><span class="token punctuation">,</span>        <span class="token string">'ck'</span><span class="token punctuation">:</span> ck<span class="token punctuation">,</span>        <span class="token string">'_time'</span><span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment"># 告知成功</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>cookies<span class="token operator">=</span>cookies<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>params<span class="token operator">=</span>para<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">raffle</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    para <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'a'</span><span class="token punctuation">:</span><span class="token string">'dl'</span><span class="token punctuation">,</span>        <span class="token string">'_time'</span><span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    response <span class="token operator">=</span> rep <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>cookies<span class="token operator">=</span>cookies<span class="token punctuation">,</span>params<span class="token operator">=</span>para<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">combine_work</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        dat <span class="token operator">=</span> sg<span class="token punctuation">(</span>cookies<span class="token punctuation">)</span>        <span class="token comment"># time.sleep(5)</span>        post<span class="token punctuation">(</span>dat<span class="token punctuation">,</span>cookies<span class="token punctuation">)</span>        raffle<span class="token punctuation">(</span>cookies<span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> ex<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> javascript 逆向 某班 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某班整合调用代码</title>
      <link href="/2022/10/02/%E6%9F%90%E7%8F%AD%E7%9A%84%E6%95%B4%E5%90%88%E8%B0%83%E7%94%A8%E4%BB%A3%E7%A0%81/"/>
      <url>/2022/10/02/%E6%9F%90%E7%8F%AD%E7%9A%84%E6%95%B4%E5%90%88%E8%B0%83%E7%94%A8%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="完整代码示例"><a href="#完整代码示例" class="headerlink" title="完整代码示例"></a>完整代码示例</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># filename: combine</span><span class="token keyword">import</span> welcomenew<span class="token keyword">import</span> safe<span class="token keyword">import</span> building<span class="token keyword">import</span> time<span class="token comment"># cookie_a = welcomenew.login("账号","密码")</span>cookie_a <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'UID'</span><span class="token punctuation">:</span> <span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token string">'___YID'</span><span class="token punctuation">:</span> <span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token string">'yiban_user_token'</span><span class="token punctuation">:</span> <span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span> <span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token string">'http_waf_cookie'</span><span class="token punctuation">:</span> <span class="token string">'x-x-x'</span><span class="token punctuation">&#125;</span>cookies_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>cookies_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>cookie_a<span class="token punctuation">)</span><span class="token keyword">for</span> cookies <span class="token keyword">in</span> cookies_list<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'----------UID:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>cookies<span class="token punctuation">[</span><span class="token string">"UID"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span><span class="token string">开始任务----------'</span></span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'----------开始签到----------'</span></span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        welcomenew<span class="token punctuation">.</span>sign<span class="token punctuation">(</span>cookies<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'----------开始答题----------'</span></span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            welcomenew<span class="token punctuation">.</span>combine_work_once<span class="token punctuation">(</span>cookies<span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'----------开始抽奖----------'</span></span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        welcomenew<span class="token punctuation">.</span>raffle<span class="token punctuation">(</span>cookies<span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    <span class="token comment"># print(f'----------开始完成安全分类任务----------')</span>    <span class="token comment"># safe.combine_work(cookies)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'----------开始盖楼任务----------'</span></span><span class="token punctuation">)</span>    building<span class="token punctuation">.</span>combine_work<span class="token punctuation">(</span>cookies<span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> javascript 逆向 某班 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某班盖楼活动</title>
      <link href="/2022/10/02/%E6%9F%90%E7%8F%AD%E7%9B%96%E6%A5%BC%E6%B4%BB%E5%8A%A8/"/>
      <url>/2022/10/02/%E6%9F%90%E7%8F%AD%E7%9B%96%E6%A5%BC%E6%B4%BB%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<p><a href="../%E6%9F%90%E7%8F%AD%E7%A7%91%E5%AD%A6%E9%98%B2%E7%96%AB%E7%AD%94%E9%A2%98/index.html">cookie获取调用了《某班科学防疫答题》中的登录代码</a> </p><h2 id="完整代码示例"><a href="#完整代码示例" class="headerlink" title="完整代码示例"></a>完整代码示例</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># filename: building</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">import</span> hashlibheaders <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span>    <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36'</span><span class="token punctuation">&#125;</span><span class="token keyword">def</span> <span class="token function">sg</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    time_res <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"http://zz.yiban.cn/topic/2022/semester?a=sg&amp;_time=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>time_res<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>                                cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">return</span> data<span class="token keyword">def</span> <span class="token function">dg</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span>sc<span class="token punctuation">,</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>sc<span class="token punctuation">)</span>    ck <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>data<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>    time_res <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"http://zz.yiban.cn/topic/2022/semester?a=dg&amp;uc=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>sc<span class="token punctuation">&#125;</span></span><span class="token string">&amp;ck=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ck<span class="token punctuation">&#125;</span></span><span class="token string">&amp;_time=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>time_res<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">"POST"</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>                                cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">dl</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    time_res <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"http://zz.yiban.cn/topic/2022/semester?a=dl&amp;_time=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>time_res<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>                                cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">combine_work</span><span class="token punctuation">(</span>cookie<span class="token punctuation">,</span>floor<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        se_data <span class="token operator">=</span> sg<span class="token punctuation">(</span>cookie<span class="token punctuation">)</span>        <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"等待"</span><span class="token punctuation">)</span>        dg<span class="token punctuation">(</span>se_data<span class="token punctuation">,</span>floor<span class="token punctuation">,</span>cookie<span class="token punctuation">)</span>        dl<span class="token punctuation">(</span>cookie<span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token comment"># 此处填入自己的cookie</span>combine_work<span class="token punctuation">(</span>cookie<span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> javascript 逆向 某班 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某班科学防疫答题</title>
      <link href="/2022/10/02/%E6%9F%90%E7%8F%AD%E7%A7%91%E5%AD%A6%E9%98%B2%E7%96%AB%E7%AD%94%E9%A2%98/"/>
      <url>/2022/10/02/%E6%9F%90%E7%8F%AD%E7%A7%91%E5%AD%A6%E9%98%B2%E7%96%AB%E7%AD%94%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="零、-全局配置"><a href="#零、-全局配置" class="headerlink" title="零、 全局配置"></a>零、 全局配置</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span>    <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="一、-登录取身份cookie"><a href="#一、-登录取身份cookie" class="headerlink" title="一、 登录取身份cookie"></a>一、 登录取身份cookie</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># name: 用户名</span><span class="token comment"># pwd: 密码</span><span class="token comment"># return: cookie字典</span><span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>pwd<span class="token punctuation">)</span><span class="token punctuation">:</span>    usr_name <span class="token operator">=</span> name    usr_psw <span class="token operator">=</span> pwd    session <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>    login_parameter <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token string">'l'</span><span class="token punctuation">,</span>        <span class="token string">'_u'</span><span class="token punctuation">:</span> usr_name<span class="token punctuation">,</span>        <span class="token string">'_s'</span><span class="token punctuation">:</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>usr_psw<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'_c'</span><span class="token punctuation">:</span> <span class="token string">'0'</span><span class="token punctuation">,</span>        <span class="token string">'_p'</span><span class="token punctuation">:</span> <span class="token string">'true'</span>    <span class="token punctuation">&#125;</span>    response <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://zz.yiban.cn/zxkc/user?a=l'</span><span class="token punctuation">,</span>                           params<span class="token operator">=</span>login_parameter<span class="token punctuation">,</span>                           headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> session<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get_dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、-签到获取积分"><a href="#二、-签到获取积分" class="headerlink" title="二、 签到获取积分"></a>二、 签到获取积分</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 每日签到</span><span class="token keyword">def</span> <span class="token function">sign</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    time_res <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"http://zz.yiban.cn/topic/2022/welcomenew?a=s&amp;_time=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>time_res<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>                                cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、获取题目信息"><a href="#三、获取题目信息" class="headerlink" title="三、获取题目信息"></a>三、获取题目信息</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 题目信息获取</span><span class="token keyword">def</span> <span class="token function">dt</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    time_res <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"http://zz.yiban.cn/topic/2022/welcomenew?a=dt&amp;_time=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>time_res<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>                                cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    question_id_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    question_answer_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        question_id_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># '1817543'</span>        question_answer_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'sw'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># '1,2,3,4'</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>question_id_list<span class="token punctuation">,</span> question_answer_list<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、-获取加密data"><a href="#四、-获取加密data" class="headerlink" title="四、 获取加密data"></a>四、 获取加密data</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 加密data获取</span><span class="token keyword">def</span> <span class="token function">sg</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    time_res <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"http://zz.yiban.cn/topic/2022/welcomenew?a=sg&amp;t=4&amp;_time=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>time_res<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>                                cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"_4_5"</span>    ck <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>data<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> ck<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、提交答题结果"><a href="#五、提交答题结果" class="headerlink" title="五、提交答题结果"></a>五、提交答题结果</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 提交答题结果</span><span class="token keyword">def</span> <span class="token function">dg</span><span class="token punctuation">(</span>ck<span class="token punctuation">,</span> question_id_list<span class="token punctuation">,</span> question_answer_list<span class="token punctuation">,</span> cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'http://zz.yiban.cn/topic/2022/welcomenew'</span>    headers_cpy <span class="token operator">=</span> headers    headers_cpy<span class="token punctuation">[</span>        <span class="token string">"Content-Type"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"application/x-www-form-urlencoded; charset=UTF-8"</span>    form_data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token string">'dg'</span><span class="token punctuation">,</span>        <span class="token string">'t'</span><span class="token punctuation">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>        <span class="token string">'uc'</span><span class="token punctuation">:</span> <span class="token string">'5'</span><span class="token punctuation">,</span>        <span class="token string">'answer[0][id]'</span><span class="token punctuation">:</span> question_id_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[0][ua]'</span><span class="token punctuation">:</span> question_answer_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[1][id]'</span><span class="token punctuation">:</span> question_id_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[1][ua]'</span><span class="token punctuation">:</span> question_answer_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[2][id]'</span><span class="token punctuation">:</span> question_id_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[2][ua]'</span><span class="token punctuation">:</span> question_answer_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[3][id]'</span><span class="token punctuation">:</span> question_id_list<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[3][ua]'</span><span class="token punctuation">:</span> question_answer_list<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[4][id]'</span><span class="token punctuation">:</span> question_id_list<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[4][ua]'</span><span class="token punctuation">:</span> question_answer_list<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'ck'</span><span class="token punctuation">:</span> ck    <span class="token punctuation">&#125;</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">"POST"</span><span class="token punctuation">,</span>                                url<span class="token punctuation">,</span>                                headers<span class="token operator">=</span>headers_cpy<span class="token punctuation">,</span>                                data<span class="token operator">=</span>form_data<span class="token punctuation">,</span>                                cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="完整代码-gt"><a href="#完整代码-gt" class="headerlink" title="完整代码-&gt;"></a>完整代码-&gt;</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># filename: welcomenew</span><span class="token keyword">import</span> base64<span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">import</span> hashlibheaders <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span>    <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36'</span><span class="token punctuation">&#125;</span><span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>pwd<span class="token punctuation">)</span><span class="token punctuation">:</span>    usr_name <span class="token operator">=</span> name    usr_psw <span class="token operator">=</span> pwd    session <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>    login_parameter <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token string">'l'</span><span class="token punctuation">,</span>        <span class="token string">'_u'</span><span class="token punctuation">:</span> usr_name<span class="token punctuation">,</span>        <span class="token string">'_s'</span><span class="token punctuation">:</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>usr_psw<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'_c'</span><span class="token punctuation">:</span> <span class="token string">'0'</span><span class="token punctuation">,</span>        <span class="token string">'_p'</span><span class="token punctuation">:</span> <span class="token string">'true'</span>    <span class="token punctuation">&#125;</span>    response <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://zz.yiban.cn/zxkc/user?a=l'</span><span class="token punctuation">,</span>                           params<span class="token operator">=</span>login_parameter<span class="token punctuation">,</span>                           headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> session<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get_dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 每日签到</span><span class="token keyword">def</span> <span class="token function">sign</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    time_res <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"http://zz.yiban.cn/topic/2022/welcomenew?a=s&amp;_time=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>time_res<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>                                cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 题目信息获取</span><span class="token keyword">def</span> <span class="token function">dt</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    time_res <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"http://zz.yiban.cn/topic/2022/welcomenew?a=dt&amp;_time=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>time_res<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>                                cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    question_id_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    question_answer_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        question_id_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># '1817543'</span>        question_answer_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'sw'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># '1,2,3,4'</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>question_id_list<span class="token punctuation">,</span> question_answer_list<span class="token punctuation">)</span><span class="token comment"># 加密data获取</span><span class="token keyword">def</span> <span class="token function">sg</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    time_res <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"http://zz.yiban.cn/topic/2022/welcomenew?a=sg&amp;t=4&amp;_time=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>time_res<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>                                cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"_4_5"</span>    ck <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>data<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> ck<span class="token comment"># 提交答题结果</span><span class="token keyword">def</span> <span class="token function">dg</span><span class="token punctuation">(</span>ck<span class="token punctuation">,</span> question_id_list<span class="token punctuation">,</span> question_answer_list<span class="token punctuation">,</span> cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'http://zz.yiban.cn/topic/2022/welcomenew'</span>    headers_cpy <span class="token operator">=</span> headers    headers_cpy<span class="token punctuation">[</span>        <span class="token string">"Content-Type"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"application/x-www-form-urlencoded; charset=UTF-8"</span>    form_data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token string">'dg'</span><span class="token punctuation">,</span>        <span class="token string">'t'</span><span class="token punctuation">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>        <span class="token string">'uc'</span><span class="token punctuation">:</span> <span class="token string">'5'</span><span class="token punctuation">,</span>        <span class="token string">'answer[0][id]'</span><span class="token punctuation">:</span> question_id_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[0][ua]'</span><span class="token punctuation">:</span> question_answer_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[1][id]'</span><span class="token punctuation">:</span> question_id_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[1][ua]'</span><span class="token punctuation">:</span> question_answer_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[2][id]'</span><span class="token punctuation">:</span> question_id_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[2][ua]'</span><span class="token punctuation">:</span> question_answer_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[3][id]'</span><span class="token punctuation">:</span> question_id_list<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[3][ua]'</span><span class="token punctuation">:</span> question_answer_list<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[4][id]'</span><span class="token punctuation">:</span> question_id_list<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[4][ua]'</span><span class="token punctuation">:</span> question_answer_list<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'ck'</span><span class="token punctuation">:</span> ck    <span class="token punctuation">&#125;</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">"POST"</span><span class="token punctuation">,</span>                                url<span class="token punctuation">,</span>                                headers<span class="token operator">=</span>headers_cpy<span class="token punctuation">,</span>                                data<span class="token operator">=</span>form_data<span class="token punctuation">,</span>                                cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">combine_work_once</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始一次答题任务"</span><span class="token punctuation">)</span>    <span class="token comment"># 完成一次答题任务</span>    <span class="token comment"># 获取题目信息 return (question_id_list, question_answer_list)</span>    question_tuple <span class="token operator">=</span> dt<span class="token punctuation">(</span>cookies<span class="token punctuation">)</span>    question_id_list <span class="token operator">=</span> question_tuple<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    question_answer_list <span class="token operator">=</span> question_tuple<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment"># 得到答题密钥 return ck</span>    ck <span class="token operator">=</span> sg<span class="token punctuation">(</span>cookies<span class="token punctuation">)</span>    <span class="token comment"># 等待5秒模拟做题</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>    <span class="token comment"># 提交答题结果</span>    dg<span class="token punctuation">(</span>ck<span class="token punctuation">,</span> question_id_list<span class="token punctuation">,</span> question_answer_list<span class="token punctuation">,</span> cookies<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> javascript 逆向 某班 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某班绿色上网答题</title>
      <link href="/2022/10/02/%E6%9F%90%E7%8F%AD%E7%BB%BF%E8%89%B2%E4%B8%8A%E7%BD%91%E7%AD%94%E9%A2%98/"/>
      <url>/2022/10/02/%E6%9F%90%E7%8F%AD%E7%BB%BF%E8%89%B2%E4%B8%8A%E7%BD%91%E7%AD%94%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="完整代码示例"><a href="#完整代码示例" class="headerlink" title="完整代码示例"></a>完整代码示例</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># filename: green</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">import</span> hashlibheaders <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span>    <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36'</span><span class="token punctuation">&#125;</span><span class="token comment"># 题目信息获取</span><span class="token keyword">def</span> <span class="token function">dt</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    time_res <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"http://zz.yiban.cn/topic/2022/green?a=dt&amp;_time=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>time_res<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>                                cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    question_id_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    question_answer_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        question_id_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># '1817543'</span>        question_answer_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'sw'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># '1,2,3,4'</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>question_id_list<span class="token punctuation">,</span> question_answer_list<span class="token punctuation">)</span><span class="token comment"># 加密data获取</span><span class="token keyword">def</span> <span class="token function">sg</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    time_res <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"http://zz.yiban.cn/topic/2022/green?a=sg&amp;_time=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>time_res<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>                                cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"_5"</span>    ck <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>data<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> ck<span class="token comment"># 提交答题结果</span><span class="token keyword">def</span> <span class="token function">dg</span><span class="token punctuation">(</span>ck<span class="token punctuation">,</span> question_id_list<span class="token punctuation">,</span> question_answer_list<span class="token punctuation">,</span> cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'http://zz.yiban.cn/topic/2022/green'</span>    headers_cpy <span class="token operator">=</span> headers    headers_cpy<span class="token punctuation">[</span>        <span class="token string">"Content-Type"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"application/x-www-form-urlencoded; charset=UTF-8"</span>    form_data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token string">'dg'</span><span class="token punctuation">,</span>        <span class="token string">'uc'</span><span class="token punctuation">:</span> <span class="token string">'5'</span><span class="token punctuation">,</span>        <span class="token string">'answer[0][id]'</span><span class="token punctuation">:</span> question_id_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[0][ua]'</span><span class="token punctuation">:</span> question_answer_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[1][id]'</span><span class="token punctuation">:</span> question_id_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[1][ua]'</span><span class="token punctuation">:</span> question_answer_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[2][id]'</span><span class="token punctuation">:</span> question_id_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[2][ua]'</span><span class="token punctuation">:</span> question_answer_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[3][id]'</span><span class="token punctuation">:</span> question_id_list<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[3][ua]'</span><span class="token punctuation">:</span> question_answer_list<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[4][id]'</span><span class="token punctuation">:</span> question_id_list<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'answer[4][ua]'</span><span class="token punctuation">:</span> question_answer_list<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'ck'</span><span class="token punctuation">:</span> ck    <span class="token punctuation">&#125;</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">"POST"</span><span class="token punctuation">,</span>                                url<span class="token punctuation">,</span>                                headers<span class="token operator">=</span>headers_cpy<span class="token punctuation">,</span>                                data<span class="token operator">=</span>form_data<span class="token punctuation">,</span>                                cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">combine_work_once</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始一次答题任务"</span><span class="token punctuation">)</span>    <span class="token comment"># 完成一次答题任务</span>    <span class="token comment"># 获取题目信息 return (question_id_list, question_answer_list)</span>    question_tuple <span class="token operator">=</span> dt<span class="token punctuation">(</span>cookies<span class="token punctuation">)</span>    question_id_list <span class="token operator">=</span> question_tuple<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    question_answer_list <span class="token operator">=</span> question_tuple<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment"># 得到答题密钥 return ck</span>    ck <span class="token operator">=</span> sg<span class="token punctuation">(</span>cookies<span class="token punctuation">)</span>    <span class="token comment"># 等待5秒模拟做题</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>    <span class="token comment"># 提交答题结果</span>    dg<span class="token punctuation">(</span>ck<span class="token punctuation">,</span> question_id_list<span class="token punctuation">,</span> question_answer_list<span class="token punctuation">,</span> cookies<span class="token punctuation">)</span>    raffle<span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">raffle</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">:</span>    time_res <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"http://zz.yiban.cn/topic/2022/green?a=dl&amp;_time=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>time_res<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>                                cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> response<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> javascript 逆向 某班 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
